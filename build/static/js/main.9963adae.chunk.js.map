{"version":3,"sources":["ui/components/assets/MAI-LOGO.svg","ui/components/elements.js","context.js","utils.js","client/web3.js","math.js","ui/components/common.js","ui/layout/WalletDrawer.js","ui/layout/Headbar.js","ui/components/styles.js","ui/pages/Overview.js","ui/pages/Pools.js","ui/pages/CDPs.js","ui/pages/PriceAnchor.js","ui/pages/Stake.js","ui/pages/Swap.js","ui/pages/CreatePool.js","ui/pages/createAnchor.js","ui/pages/manageCDP.js","ui/pages/openCDP.js","ui/pages/liquidate.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Colour","alpha","defaultStyles","color","fontSize","letterSpacing","LabelLG","props","styles","style","fontWeight","children","H1","fontColour","grey","margin","H2","Logo","src","LOGO","alt","height","marginLeft","marginRight","Label","dgrey","size","Sublabel","LabelGroup","display","title","label","Text","black","bold","Center","alignItems","justifyContent","Gap","HR","border","offwhite","Button","backgroundColor","borderColor","disabled","onClick","onChange","type","loading","danger","icon","block","Context","React","createContext","ContextProvider","state","wallet","setContext","fn","setState","Provider","value","this","Component","Consumer","delay","ms","Promise","res","setTimeout","bn","number","BigNumber","formatBN","BN","n","toFixed","convertFromWei","div","convertToWei","multipliedBy","getAddressShort","address","addr","substring","length","formatUSD","input","toNumber","toLocaleString","rainbowStop","h","f","k","Math","max","min","rgb2hex","floor","r","g","b","toString","padStart","MAI_ADDRESS","ETH_ADDRESS","getWeb3","Web3","givenProvider","getAccountArray","a","web3_","eth","getAccounts","accounts","getETHBalance","acc","getBalance","bal_","getMAIContract","Contract","baseContract","abi","getTokenContract","ERC20","getTokenSupply","contract","methods","totalSupply","call","getMAIPrice","medianMAIValue","maiPrice","getAllCDPs","countOfCDPs","CDPCount","CDPData","i","mapCDP_Data","allCDPs","mapAddress_MemberData","owner","cdp","checkLiquidationPoint","checkLiquidation","push","debt","collateral","getPoolsArray","getExhangesCount","poolCount","pools","exchanges","getPoolsData","poolArray","PoolData","poolAddress","mapAsset_ExchangeData","getPools","calcValueInMAI","price","getStakeArray","stakersArray","symbol","name","balanceMAI","balanceAsset","poolUnits","isAnchor","getWalletData","account","ethBalance","balanceOf","maiBalance","accountData","tokens","tokenSymbol","tokenName","tokenBalance","tokenAddress","calcStakerCount","stakersCount","stakeArray","calcStakerAddress","stakerAddress","getStakerData","poolsData","getMemberExchangeCount","memberPoolCount","stakerData","getStakerExchanges","addressPool","poolData","find","item","calcStakerUnits","stakerUnits","getMemberData","getMembersCount","memberCount","getWalletTokenData","walletData","getTokenSymbol","filterWalletByPools","arrayPools","map","filter","includes","filterWalletNotPools","filterTokensByPoolSelection","getAccountCDP","getCDPData","cdpNumber","AllCDPData","getPoolData","getAccountStakeData","stakedPool","getSwapOutput","inputAmount","pool","toBase","x","X","balance","depth","Y","numerator","times","denominator","plus","pow","getSwapSlip","getDoubleSwapOutput","pool1","pool2","v","getDoubleSwapSlip","swapSlip1","swapSlip2","getStakeUnits","stake","base","t","token","V","T","part1","part2","part3","getPoolShare","unitData","units","stakeUnits","total","totalUnits","calcCLPSwap","getMAXMINT","mainPool","CLT","amount","etherBal","balMAI","calcEtherPPinMAI","getLiquidationFee","liquidation","_debt","_collateral","_X","_Y","liquidatedCollateral","debtDeleted","getPoolValue","basePrice","BP","parseInt","poolAssetValue","getPrice","poolBaseValue","BreadcrumbCombo","Item","to","link","parent","child","InputPane","xs","onInputChange","placeholder","paneData","allowClear","addonAfter","changeToken","tokenList","changeAmount","InputCheck","InputPaneStatic","PercentButtonRow","btnStyle","marginTop","marginBottom","LiquidButtonRow","TokenDropDown","context","useContext","useState","setSymbol","arraySymbols","setArraySymbols","useEffect","buildArray","symbols","handleMenuClick","e","console","log","key","menu","index","paddingLeft","overlay","width","DownOutlined","TokenSymbol","PoolPane","poolStyles","borderWidth","borderStyle","borderRadius","padding","sm","xl","hideSubpane","textAlign","data","field1","field2","field3","ColourCoin","numbers","str","inputStr","String","toUpperCase","firstInt","charCodeAt","secondInt","Number","getIntFromName","startCol","stopCol","coinName","substr","coinStyle","textTransform","white","position","background","CoinRow","CDPDetails","span","CLTButtonRow","CDPPane","TabPane","Tabs","DrawerContent","defaultActiveKey","tab","AssetTable","columns","render","record","dataSource","pagination","showHeader","rowKey","StakeTable","CDPTable","CDPflag","setCDPFlag","checkCDP","accountCDP","EditOutlined","PlusCircleOutlined","Header","Layout","Headbar","visible","setVisible","metamask","setMetaMask","getData","transaction","allCDPData","ArrayPools","PoolsData","AnchorPools","MemberData","ETHData","BASEData","ConnectWallet","window","ethereum","enable","theme","mode","defaultSelectedKeys","UserOutlined","placement","closable","onClose","WalletDrawer","paneStyles","lgrey","colStyles","rowStyles","Overview","setPoolCount","setStakersCount","setMaiPrice","count","hasOwnProperty","getPoolCount","networkData","volume","users","Pools","PoolTable","retry","setRetry","connected","setConnected","dataIndex","justify","LoginOutlined","SwapOutlined","paddingTop","paddingBottom","LoadingOutlined","AnchorTable","CDPs","CDPExist","setCDPExist","checkConnected","checkForCDP","message","banner","canLiquidate","AimOutlined","Anchors","withRouter","tokenStakeAddress","setTokenStakeAddress","setAccount","setStakerData","setMainPool","tokenStakeData","setTokenStakeData","baseStakeData","setBaseStakeData","unStakeData","setUnstakeData","setStakeUnits","setShareData","search","location","params","URLSearchParams","get","inputTokenData","getStakeData","inputBaseData","getunStakeData","inputAddress","stakeAssets","tokenAmount","baseAmount","addLiquidityToEtherPool","send","from","tx","history","addLiquidityToAssetPool","unStakeAssets","unStakeBP","unStakePool","removeLiquidityPool","getShare","poolAttributes","txCount","refreshStyles","target","finalAmt","Swap","setTokenList","setTokenAddress","output","outputSymbol","slip","buyData","setBuyData","sellData","setSellData","getSwapData","onBuyChange","changeBuyToken","changeBuyAmount","onSellChange","changeSellAmount","amt","outputAddress","buyPool_","sellPool_","inputSymbol","mainPool_","Buy","addressFrom","tokenTo","swapTokenToToken","Sell","checkFlag","setCheckFlag","tokenData","setTokenData","newPool","setNewPool","setBaseStake2Data","selectAddress","setCheckToken","baseData","getCheckData","createPool","contractToken","BaseAmount","TokenAmount","TokenAprove","approve","addExchange","QuestionCircleOutlined","createAnchorPool","TokenApprove","addAnchor","ManageCDP","CDPDETAILS","AddCollateralTab","setUpdate","addCollateralData","setAddCollateralData","getCollateralData","addCollateral","addCollateralToCDP","RemintTab","setCR","setCollaterisation","remintTOKEN","collateralisation","remintMAIFromCDP","CloseDebtTab","closeDebtData","setCloseDebtData","getDebtData","closeDebt","closeCDP","precise","parseFloat","toPrecision","collateralData","setCollateralData","openCDP","cltRatio","setCDP","liquidationData","setSetLiquidationData","cdpData","setCDPData","fee","setFee","CDP","getLiquidationData","getSelectedCDPData","LiquidateCDP","liquidationAmount","unSafeCDP","liquidateCDP","Content","contentStyles","App","path","exact","component","PriceAnchor","AnchorPool","Stake","OpenCDP","Liquidate","CreatePool","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.9963adae.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/MAI-LOGO.7cc8e08b.svg\";","import React from 'react'\nimport { Button as AntButton } from \"antd\"\nimport LOGO from './assets/MAI-LOGO.svg'\nexport const Colour = (alpha) => {\n  var colour\n  if (alpha) {\n    colour = {\n      \"yellow\": 'rgba(255, 206, 86, ' + alpha + ')'\n    }\n  } else {\n    colour = {\n      \"black\": \"#263238\",\n      \"dgrey\": \"#455a64\",\n      \"grey\": \"#607d8b\",\n      \"lgrey\": \"#cfd8dc\",\n      \"offwhite\": '#eceff1',\n      \"white\": \"#FFF\",\n      \"primary\": \"#2196f3\",\n      \"secondary\": \"#6ec6ff\",\n      \"accent\": '#f44336'\n    }\n  }\n  return colour\n}\nconst defaultStyles = {\n  color: \"#222831\",\n  fontSize: \"14px\",\n  letterSpacing: 1\n}\n\nexport const LabelLG = (props) => {\n  let styles = {...defaultStyles, ...props.style || {}}\n  styles.fontSize = \"32px\"\n  styles.fontWeight = 100\n  styles.color = \"#222831\"\n  return (\n    <span style={styles}>\n      {props.children}\n    </span>\n  )\n}\n\n\nexport const H1 = (props) => {\n  let styles = { ...props.style || {} }\n  styles.fontSize = '24px'\n  styles.fontColour = '#000000'\n  styles.fontWeight = \"bold\"\n  styles.color = Colour().grey\n\n  if (props.margin) {\n    styles.margin = props.margin\n  }\n\n  return (\n    <>\n      <span style={styles}>{props.children}</span>\n      <br />\n    </>\n\n  )\n}\n\nexport const H2 = (props) => {\n  let styles = { ...props.style || {} }\n  styles.fontSize = \"20px\"\n  styles.fontWeight = \"bold\"\n  styles.color = Colour().grey\n  styles.margin = \"20px 0px\"\n\n  if (props.margin) {\n    styles.margin = props.margin\n  }\n  return (\n    <span style={styles}>\n      {props.children}\n    </span>\n  )\n}\n\nexport const Subtitle = (props) => {\n  let styles = { ...props.style || {} }\n  styles.fontSize = \"14px\"\n  styles.fontWeight = \"bold\"\n  styles.color = Colour().dgrey\n  styles.margin = \"20px 0px\"\n\n  if (props.margin) {\n    styles.margin = props.margin\n  }\n  return (\n    <span style={styles}>\n      {props.children}\n    </span>\n  )\n}\n\nexport const Logo = () => {\n  return (\n      <img src={LOGO} alt=\"mai-logo\" height={100} style={{marginLeft:40, marginRight:40}}/>\n  )\n} \n\nexport const Label = (props) => {\n  let styles = { ...props.style || {} }\n  styles.fontSize = \"16px\"\n  styles.fontWeight = \"bold\"\n  styles.color = Colour().dgrey\n  styles.margin = \"20px 0px\"\n\n  if (props.margin) {\n    styles.margin = props.margin\n  }\n  if (props.size) {\n    styles.fontSize = props.size\n  }\n\n  return (\n    <span style={styles}>\n      {props.children}\n    </span>\n  )\n}\n\nexport const LabelGrey = (props) => {\n  let styles = { ...props.style || {} }\n  styles.fontSize = \"16px\"\n  styles.fontWeight = \"bold\"\n  styles.color = Colour().lgrey\n  styles.margin = \"20px 0px\"\n\n  if (props.margin) {\n    styles.margin = props.margin\n  }\n  if (props.size) {\n    styles.fontSize = props.size\n  }\n\n  return (\n    <span style={styles}>\n      {props.children}\n    </span>\n  )\n}\n\nexport const Sublabel = (props) => {\n  let styles = { ...props.style || {} }\n  styles.fontSize = \"10px\"\n  styles.fontWeight = \"\"\n  styles.color = Colour().dgrey\n  styles.margin = \"20px 0px\"\n\n  if (props.margin) {\n    styles.margin = props.margin\n  }\n\n  return (\n    <span style={styles}>\n      {props.children}\n    </span>\n  )\n}\n\nexport const LabelGroup = (props) => {\n\n  return (\n    <div style={{ display: 'block' }}>\n      <Label size={props.size}>{props.title}</Label><br />\n      <Sublabel size={props.size}>{props.label}</Sublabel><br />\n    </div>\n  )\n}\n\nexport const Text = (props) => {\n  let styles = { ...props.style || {} }\n  styles.fontSize = \"14px\"\n  styles.color = Colour().black\n  styles.margin = \"20px 0px\"\n\n  if (props.bold) {\n    styles.fontWeight = \"bold\"\n  }\n  if (props.color) {\n    styles.color = props.color\n  }\n  if (props.size) {\n    styles.fontSize = props.size\n  }\n  if (props.margin) {\n    styles.margin = props.margin\n  }\n  return (\n    <span style={styles}>\n      {props.children}\n    </span>\n  )\n}\n\nexport const P = (props) => {\n  let styles = { ...props.style || {} }\n  styles.fontSize = \"10px\"\n  styles.color = Colour().black\n  styles.display = \"block\"\n  styles.fontWeight = \"bold\"\n\n  if (props.size) {\n    styles.fontSize = props.size\n  }\n  return (\n    <span style={styles}>\n      {props.children}\n    </span>\n  )\n}\n\nexport const Center = (props) => (\n  <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"center\" }}>\n    {props.children}\n  </div>\n)\n\nexport const Gap = () => (\n  <div>\n    <br></br><br></br>\n  </div>\n)\n\nexport const HR = () => (\n  <div>\n    <hr style={{border: `1px solid ${Colour().offwhite}`,marginLeft:'-10px', marginRight:'-10px'}}/>\n  </div>\n)\n\nexport const Button = (props) => {\n  let styles = {...props.style || {}}\n  // styles.fontSize = \"16px\"\n  // styles.fontWeight = \"bold\"\n  // styles.color = Colour().gold\n  // styles.textDecoration = \"underline\"\n  // styles.marginTop = 30\n  // styles.marginBottom = 30\n  styles.margin = 10\n  // styles.backgroundColor = Colour().dgrey\n  // styles.borderColor = Colour().dgrey\n  styles.display= \"inline-block\"\n  // styles.borderBottom = \"1px solid #D09800\"\n  // styles.height = \"30px\"\n  // styles.padding = \"0px 0px\"\n\n  if (props.size) {\n    styles.fontSize = props.size\n  }\n  if (props.backgroundColor) {\n    styles.backgroundColor = props.backgroundColor\n    styles.borderColor = props.backgroundColor\n  }\n\n  return (\n    <AntButton\n      disabled={props.disabled}\n      style={styles}\n      onClick={props.onClick}\n      onChange={props.onChange}\n      type={props.type}\n      loading={props.loading}\n      danger={props.danger}\n      icon={props.icon}\n      block={props.block}\n    >\n      {props.children}\n    </AntButton>\n  )\n}\n\n","import React from 'react'\nimport PropTypes from 'prop-types';\n\nexport const Context = React.createContext({})\n\nexport class ContextProvider extends React.Component {\n  static propTypes = {\n    children: PropTypes.any,\n  };\n\n  state = {\n    wallet: null\n  };\n\n\n  // reimplementation of setState, but specifically for context state.\n  setContext = (state, fn) => {\n    this.setState(state, () => {\n      if (fn) {\n        fn()\n      }\n    })\n  }\n\n  render() {\n    return (\n      <Context.Provider\n        value={{\n          ...this.state,\n          setContext: this.setContext\n        }}\n      >\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const ContextConsumer = Context.Consumer;","\nimport BigNumber from 'bignumber.js'\n\nexport function getBN(number){\n    return (new BigNumber(number)).toFixed()\n}\n\n export const delay = ms => new Promise(res => setTimeout(res, ms));\n\n    \n\n\nexport function bn(number){\n    return new BigNumber(number)\n}\n\nexport function bn2Str(bn){\n    return (bn).toString()\n}\n\nexport function formatBN(BN, n=2){\n    return BN.toFixed(n)\n}\n\nexport const one = 1000000000000000000\n\nexport function convertFromWei(number) {\n    var num = new BigNumber(number)\n    var final = num.div(10**18)\n    return final.toFixed(2)\n}\n\nexport function convertToWei(number) {\n    var num = new BigNumber(number)\n    var final = num.multipliedBy(10**18)\n    return final\n}\n\nexport const getAddressShort = (address) => {\n    const addr = address ? address : '0x000000000000000'\n    const addrShort = addr.substring(0,5) + '...' + addr?.substring(addr.length-3, addr.length)\n    return addrShort\n}\n\nexport const formatUSD = (input) => {\n    const value = input ? (bn(input)).toNumber() : 0\n    return `$${(value.toLocaleString())}`\n}\n\nexport const rainbowStop = (h) => {\n    const f = (n, k = (n + h * 12) % 12) => 0.5 - 0.5 * Math.max(Math.min(k - 3, 9 - k, 1), -1)\n    return rgb2hex(Math.floor(f(0) * 255), Math.floor(f(8) * 255), Math.floor(f(4) * 255))\n  }\n  \n  export const rgb2hex = (r, g, b) =>\n    `#${((r << 16) + (g << 8) + b).toString(16).padStart(6, '0')}`\n  \n  export const getIntFromName = (str) => {\n    const inputStr = String(str).toUpperCase()\n    const div = 22\n    const firstInt = (inputStr.charCodeAt(0) - 'A'.charCodeAt(0)) / div\n    const secondInt = inputStr.length > 1 ? (inputStr.charCodeAt(1) - 'A'.charCodeAt(0)) / div : 0\n    return [Number(firstInt.toFixed(2)), Number(secondInt.toFixed(2))]\n  }","import Web3 from 'web3'\nimport baseContract from '../artifacts/MAI.json'\nimport ERC20 from '../artifacts/ERC20.json'\n\nexport const MAI_ADDRESS = '0xace5b13f48d6ff2d6cb3759dea3f0ed3fc3fe31e'\nexport const ETH_ADDRESS = '0x0000000000000000000000000000000000000000'\n\n//================########  Web3 RPC Construction ##########================\nexport const getWeb3 = () => {\n    return new Web3(Web3.givenProvider || \"http://localhost:7545\")\n   //return new Web3(new Web3.providers.HttpProvider(\"https://rinkeby.infura.io/v3/75295055d9ac44588fafa61561fa45f8\"));\n}\nexport const getEtherscanURL = () => {\n    return \"https://etherscan.io/\"\n}\nexport const getAccountArray = async () => {\n    var web3_ = getWeb3()\n    var accounts = await web3_.eth.getAccounts()\n    return accounts\n}\nexport const getETHBalance = async (acc) => {\n    var web3_ = getWeb3()\n    var bal_ = await web3_.eth.getBalance(acc)\n    return bal_\n}\nexport const getMAIContract = () => {\n    var web3_ = getWeb3()\n    return new web3_.eth.Contract(baseContract.abi, MAI_ADDRESS)\n}\nexport const getTokenContract = (address) => {\n    var web3_ = getWeb3()\n    return new web3_.eth.Contract(ERC20.abi, address)\n}\nexport const getTokenSupply = async (address) =>{\n    var contract = getTokenContract(address)\n    return await contract.methods.totalSupply().call()\n}\n\n\n//================########  Header Data Collection  ##########================\nexport const getMAIPrice =async()=>{\nlet maiPrice =  await getMAIContract().methods.medianMAIValue().call()\nreturn maiPrice\n}\nexport const getAllCDPs = async() => {\n    var CDPCount = await getMAIContract().methods.countOfCDPs().call()\n    var CDPData = []\n    //console.log(CDPCount)\n    for(var i = 1; i <= CDPCount; i++){\n        var allCDPs = await getMAIContract().methods.mapCDP_Data(i).call()\n        var cdp = await getMAIContract().methods.mapAddress_MemberData(allCDPs.owner).call()\n        var checkLiquidation = await getMAIContract().methods.checkLiquidationPoint(i).call()\n         CDPData.push({\n             'cdp': cdp,\n             'debt': allCDPs.debt,\n             'collateral': allCDPs.collateral,\n             'address' : allCDPs.owner,\n             'canLiquidate': checkLiquidation\n            })\n    }\n    return CDPData\n}\nexport const getPoolsArray = async () =>{\n    let poolCount = await getMAIContract().methods.getExhangesCount().call()\n    let pools = []\n    for(let i = 0; i<poolCount; i++){\n        let address = await getMAIContract().methods.exchanges(i).call()\n        pools.push(\n            address\n        )\n    }\n    //console.log('poolArray',pools )\n    return pools\n}\nexport const getPoolsData = async (poolArray) => {\n    let PoolData = []\n    for(let i = 0; i < poolArray.length; i++){\n         let poolAddress = poolArray[i]\n         let getPools = await getMAIContract().methods.mapAsset_ExchangeData(poolAddress).call()\n         let price = await getMAIContract().methods.calcValueInMAI(poolAddress).call()\n         let stakersArray = await getStakeArray(poolAddress)\n         if(poolAddress === ETH_ADDRESS){\n           var symbol = 'ETH'\n           var name = 'ethereum'\n         }else{\n            var symbol = await getTokenContract(poolAddress).methods.symbol().call()\n            var name = await getTokenContract(poolAddress).methods.name().call()\n         }\n        PoolData.push({\n            'symbol': symbol,\n            'address': poolAddress,\n            'name': name,\n            'price':price,\n            'depth': getPools.balanceMAI,\n            'balance': getPools.balanceAsset,\n            'units': getPools.poolUnits,\n            'isAnchor': getPools.isAnchor,\n            'stakers': stakersArray\n            })\n    }\n    //console.log('poolData', PoolData)\n    return PoolData\n}\nexport const getWalletData = async (poolArray) => {\n    let account = await getAccountArray()\n    let address = account[0]\n    let ethBalance = await getETHBalance(address)\n    let maiBalance = await getMAIContract().methods.balanceOf(address).call()\n   \n    let tokens = []\n    let accountData = {\n        'address': address,\n        'tokens': tokens\n    }\n    tokens.push({\n        'symbol':'ETH',\n        'name':'etherum',\n        'balance': ethBalance,\n        'address': ETH_ADDRESS\n    },{\n        'symbol':'MAI',\n        'name':'mai',\n        'balance': maiBalance,\n        'address': MAI_ADDRESS\n    }\n)\n    for(let i = 1; i < poolArray.length; i++){\n        //console.log(arrayPools[i].poolAddress)\n        let poolAddress = poolArray[i]\n        let tokenSymbol = await getTokenContract(poolAddress).methods.symbol().call()\n        let tokenName = await getTokenContract(poolAddress).methods.name().call()\n        let tokenBalance = await getTokenContract(poolAddress).methods.balanceOf(address).call()\n        let tokenAddress = poolAddress\n\n        tokens.push({\n            'symbol':tokenSymbol,\n            'name':tokenName, \n            'balance':tokenBalance,\n            'address': tokenAddress })\n    }\n    \n    return accountData\n}\nexport const getStakeArray = async (poolAddress)=>{\n    let stakersCount = await getMAIContract().methods.calcStakerCount(poolAddress).call()\n    let stakeArray = []\n    for(let i = 0; i < stakersCount; i++){\n        let stakerAddress = await getMAIContract().methods.calcStakerAddress(poolAddress, i).call()\n        stakeArray.push(stakerAddress)\n    }  \n    //console.log('stakeArray',stakeArray )\nreturn stakeArray  \n}\nexport const getStakerData = async (address, poolsData) => {\n    let memberPoolCount = await getMAIContract().methods.getMemberExchangeCount(address).call()\n    let stakerData = []\n\n    for(let i = 0; i < memberPoolCount; i++){\n        const addressPool = await getMAIContract().methods.getStakerExchanges(address, i).call()\n        const poolData = poolsData.find((item) => item.address === addressPool)\n        const stakerUnits = await getMAIContract().methods.calcStakerUnits(addressPool, address).call()\n        stakerData.push({\n            'symbol':poolData.symbol,\n            'name':poolData.name,\n            'stakedPool': addressPool,\n            'units':stakerUnits\n        })\n        }\n       //console.log('stakerData', stakerData)\n    return stakerData\n}\nexport const getMemberData = async()=>{\n    let memberCount = await getMAIContract().methods.getMembersCount().call()\n   return memberCount\n}\n\n//================########  get Wallet Data  ##########================\nexport const getWalletTokenData = (address, walletData) => {\n    const tokenData = walletData.tokens.find((item) => item.address === address)\n    return (tokenData)\n}\nexport const getTokenSymbol = (address, walletData) => {\n    const token = walletData.tokens.find((item) => item.address === address)\n    return (token.symbol) \n}\nexport const filterWalletByPools = (arrayPools, walletData) => {\n    const pools = arrayPools.map((item) => item)\n    const wallet = walletData.tokens.map((item) => item.address)\n    const tokens = wallet.filter((item) => pools.includes(item) || item === MAI_ADDRESS)\n    return tokens\n}\nexport const filterWalletNotPools = (arrayPools, walletData) => {\n    const pools = arrayPools.map((item) => item.address)\n    const wallet = walletData.tokens.map((item) => item.address)\n    const tokens = wallet.filter((item) => wallet.includes(item) && !pools.includes(item) )\n    //console.log(tokens)\n    return tokens\n}\nexport const filterTokensByPoolSelection = (address, arrayPools, walletData) =>{\n    const tokens =  filterWalletByPools(arrayPools,walletData)\n    const tokensNotPool = tokens.filter((item) => item !== address)\n    return tokensNotPool\n}\nexport const filterTokensNotPoolSelection = (address, arrayPools, walletData) =>{\n    const tokens =  filterWalletByPools(arrayPools,walletData)\n    const tokensNotPool = tokens.filter((item) => item !== address)\n    return tokensNotPool\n}\n\n//================########  get CDP Data  ##########================\nexport const getAccountCDP = (address, CDPData) =>{\n    const cdp = CDPData.find((item) => item.address === address)\n    return (cdp)\n}\nexport const getUnSafeCDPs = (CDPData) =>{\n    const unSafeCDP = CDPData.filter((item) => item.canLiquidate === true)\n    return (unSafeCDP)\n}\nexport const getSafeCDPs = (CDPData) =>{\n    //console.log(CDPData)\n    const SafeCDP = CDPData.filter((item) => item.canLiquidate === false)\n    return (SafeCDP)\n}\nexport const getCDPData = (cdpNumber, AllCDPData)=>{\n    const CDPData = AllCDPData.find((item) => item.cdp === cdpNumber)\n    return (CDPData)\n}\n\n//================########  get Pool Data  ##########================\nexport const getPoolData = (address, poolsData) =>{\n    //console.log(address, poolsData)\n    const pool = poolsData.find((item) => item.address === address)\n    return (pool)\n}\nexport const getPoolCount = (arrayPools) =>{\n    var count = 0; var i;\n\nfor (i in arrayPools) {\n    if (arrayPools.hasOwnProperty(i)) {\n        count++;\n    }\n}\n\n   return count\n    \n}\nexport const getAnchors = (poolsData) =>{\n    const anchors = poolsData.filter((item) => item.isAnchor === true)\n    return (anchors)\n}\n\n\n//================####### get Stake Data ###########=================\nexport const getAccountStakeData = (poolAddress, stakerData)=>{\n    //console.log(poolAddress, stakerData)\n    const stakeData = stakerData.find((item) => item.stakedPool === poolAddress)\n    return (stakeData)\n\n}\n\n\n// let tokenSymbol = await getTokenContract('0xdD04AC682c9c3507088D5dD272A8f335C41e996e').methods.symbol().call()\n// let tokenName = await getTokenContract('0xdD04AC682c9c3507088D5dD272A8f335C41e996e').methods.name().call()\n// let tokenBalance = await getTokenContract('0xdD04AC682c9c3507088D5dD272A8f335C41e996e').methods.balanceOf(address).call()\n// let tokenAddress = '0xdD04AC682c9c3507088D5dD272A8f335C41e996e'\n// let tokenSymbol2 = await getTokenContract('0x8E1Df8FA70f7b6D80Eb79b9F3b1133f90150ca89').methods.symbol().call()\n// let tokenName2 = await getTokenContract('0x8E1Df8FA70f7b6D80Eb79b9F3b1133f90150ca89').methods.name().call()\n// let tokenBalance2 = await getTokenContract('0x8E1Df8FA70f7b6D80Eb79b9F3b1133f90150ca89').methods.balanceOf(address).call()\n// let tokenAddress2 = '0x8E1Df8FA70f7b6D80Eb79b9F3b1133f90150ca89'\n// ,{\n//     'symbol':tokenSymbol,\n//     'name':tokenName,\n//     'balance': tokenBalance,\n//     'address': tokenAddress\n// },{\n//     'symbol':tokenSymbol2,\n//     'name':tokenName2,\n//     'balance': tokenBalance2,\n//     'address': tokenAddress2\n// }\n","import { one, bn } from './utils'\n\nexport const getSwapOutput = (inputAmount, pool, toBase) => {\n  // formula: (x * X * Y) / (x + X) ^ 2\n  const x = bn(inputAmount)\n  const X = toBase ? bn(pool.balance) : bn(pool.depth) // input is token if toBase\n  const Y = toBase ? bn(pool.depth) : bn(pool.balance) // output is base if toBase\n  const numerator = x.times(X).times(Y)\n  const denominator = x.plus(X).pow(2)\n  const result = numerator.div(denominator)\n  return result\n}\n\nexport const getSwapInput = (toBase, pool, outputAmount) => {\n  // formula: (((X*Y)/y - 2*X) - sqrt(((X*Y)/y - 2*X)^2 - 4*X^2))/2\n  // (part1 - sqrt(part1 - part2))/2\n  const X = toBase ? bn(pool.balance) : bn(pool.depth) // input is token if toBase\n  const Y = toBase ? bn(pool.depth) : bn(pool.balance) // output is base if toBase\n  const y = bn(outputAmount)\n  const part1 = X.times(Y).div(y).minus(X.times(2))\n  const part2 = X.pow(2).times(4)\n  const result = part1.minus(part1.pow(2).minus(part2).sqrt()).div(2)\n  return result\n}\n\nexport const getSwapSlip = (inputAmount, pool, toBase) => {\n  // formula: (x) / (x + X)\n  const x = bn(inputAmount)\n  const X = toBase ? bn(pool.balance) : bn(pool.depth) // input is token if toBase\n  const result = x.div(x.plus(X))\n  return result\n}\n\nexport const getSwapFee = (inputAmount, pool, toBase) => {\n  // formula: (x * x * Y) / (x + X) ^ 2\n  const x = bn(inputAmount)\n  const X = toBase ? bn(bn(pool.balance)) : bn(pool.depth) // input is token if toBase\n  const Y = toBase ? bn(pool.depth) : bn(bn(pool.balance)) // output is base if toBase\n  const numerator = x.times(x).multipliedBy(Y)\n  const denominator = x.plus(X).pow(2)\n  const result = numerator.div(denominator)\n  return result\n}\n\nexport const getDoubleSwapOutput = (inputAmount, pool1, pool2) => {\n  // formula: getSwapOutput(pool1) => getSwapOutput(pool2)\n  const v = getSwapOutput(inputAmount, pool1, true)\n  const output = getSwapOutput(v, pool2, false)\n  return output\n}\n\nexport const getDoubleSwapInput = (pool1, pool2, outputAmount) => {\n  // formula: getSwapInput(pool2) => getSwapInput(pool1)\n  const y = getSwapInput(false, pool2, outputAmount)\n  const x = getSwapInput(true, pool1, y)\n  return x\n}\n\nexport const getDoubleSwapSlip = (inputAmount, pool1, pool2) => {\n  // formula: getSwapSlip1(input1) + getSwapSlip2(getSwapOutput1 => input2)\n  const swapSlip1 = getSwapSlip(inputAmount, pool1, true)\n  const v = getSwapOutput(inputAmount, pool1, true)\n  const swapSlip2 = getSwapSlip(v, pool2, false)\n  const result = swapSlip1.plus(swapSlip2)\n  return result\n}\n\nexport const getDoubleSwapFee = (inputAmount, pool1, pool2) => {\n  // formula: getSwapFee1 + getSwapFee2\n  const fee1 = getSwapFee(inputAmount, pool1, true)\n  const v = getSwapOutput(inputAmount, pool1, true)\n  const fee2 = getSwapFee(v, pool2, false)\n  const fee1Token = getValueOfbaseInToken(fee1, pool2)\n  const result = fee2.plus(fee1Token)\n  return result\n}\n\nexport const getValueOfTokenInbase = (input, pool) => {\n  // formula: ((a * V) / A) => V per A (baseper$)\n  const a = bn(input)\n  const V = bn(pool.depth)\n  const A = bn(bn(pool.balance))\n  const result = a.times(V).div(A)\n  // console.log(formatBN(a), formatBN(A), formatBN(V))\n  return result\n}\n\nexport const getValueOfbaseInToken = (input, pool) => {\n  // formula: ((v * A) / V) => A per V ($perbase)\n  const v = bn(input)\n  const V = bn(pool.depth)\n  const A = bn(bn(pool.balance))\n  const result = v.times(A).div(V)\n  // console.log(formatBN(v), formatBN(A), formatBN(V))\n  return result\n}\n\nexport const getValueOfToken1InToken2 = (input, pool1, pool2) => {\n  // formula: (A2 / V) * (V / A1) => A2/A1 => A2 per A1 ($ per Token)\n  const VperT1 = getValueOfTokenInbase(input, pool1)\n  const T2perV = getValueOfbaseInToken(one, pool2)\n  const result = T2perV.times(VperT1).div(one)\n  return result\n}\n\nexport const getStakeUnits = (stake, pool) => {\n  // formula: ((V + T) (v T + V t))/(4 V T)\n  // part1 * (part2 + part3) / denominator\n  const v = bn(stake.base)\n  const t = bn(stake.token)\n  const V = bn(pool.depth).plus(v) // Must add r first\n  const T = bn(pool.balance).plus(t) // Must add t first\n  const part1 = V.plus(T)\n  const part2 = v.times(T)\n  const part3 = V.times(t)\n  const numerator = part1.times(part2.plus(part3))\n  const denominator = V.times(T).times(4)\n  const result = numerator.div(denominator)\n  return result\n}\n\nexport const getPoolShare = (unitData, pool) => {\n  // formula: (base * part) / total; (token * part) / total\n  const units = bn(unitData.stakeUnits)\n  const total = bn(unitData.totalUnits)\n  const V = bn(pool.depth)\n  const T = bn(pool.balance)\n  const token = T.times(units).div(total)\n  const base = V.times(units).div(total)\n  const stakeData = {\n    token: token,\n    base: base,\n  }\n \n  return stakeData\n}\n\nexport const calcCLPSwap = (x, X, Y) =>{\n// y = (x * Y * X)/(x + X)^2\nconst numerator = x.times(Y.times(X));\nconst denominator = (x.plus(X)).times(x.plus(X));\nconst y = numerator.div(denominator);\nreturn y\n}\n\nexport const calcEtherPPinMAI = (collateral, pool) => {\n  const amount = bn(collateral)\n  const etherBal = bn(pool.balance) \n  const balMAI = bn(pool.depth)  \n  //console.log('EthPrice' + balMAI/etherBal)\n  const outputMAI = calcCLPSwap(amount, etherBal, balMAI);\n  //console.log(convertFromWei(outputMAI))\n  return outputMAI\n}\n \nexport const getMAXMINT = (collateral, mainPool, CLT) =>{\nconst purchasingPower = calcEtherPPinMAI(collateral, mainPool);//how valuable Ether is in MAI\nconst maxMintAmount = (purchasingPower.times(100)).div(CLT);\nreturn maxMintAmount\n}\nexport const getPrice = (depth, balance) => {\n  const etherBal = bn(balance) \n  const balMAI = bn(depth) \n  const price = balMAI.div(etherBal)\n  return price\n}\n\nexport const getLiquidationFee = (debt,collateral, poolData, liquidation )=>{\n  const _debt = bn(debt)\n  const _collateral = bn(collateral)\n  const _X = bn(poolData.balance)\n  const _Y = bn(poolData.depth)\n  //console.log(_X,_Y)\n  const basisPoints = 10000;\n  const liquidatedCollateral = (_collateral.times(liquidation)).div(basisPoints);\n  const debtDeleted = (_debt.times(liquidation)).div(basisPoints);\n  const maiBought = calcCLPSwap(liquidatedCollateral, _X, _Y);\n  const fee = maiBought - debtDeleted;\nreturn fee\n}\n\nexport const getPoolValue = (pool, basePrice) =>{\n  let BP = bn(parseInt(basePrice))\n  let depth = bn(pool.depth)\n  let balance = bn(pool.balance)\n  let poolPrice = getPrice(depth,balance)\n\n  let poolAssetValue = poolPrice.times(balance)\n  let poolBaseValue = BP.times(depth)\n\n   let poolValue = poolAssetValue.plus(poolBaseValue)\n  return poolValue.toFixed()\n}\n\n ","import React, { useState, useEffect, useContext } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Context } from '../../context'\nimport { Row, Col, Breadcrumb, Button, Input, Dropdown, Menu, Divider } from 'antd'\nimport { DownOutlined,RedoOutlined } from '@ant-design/icons';\n// PlusCircleOutlined, MinusCircleOutlined, Tooltip\nimport {\n  rainbowStop, getIntFromName,\n  convertFromWei, formatUSD, } from '../../utils'\nimport {MAI_ADDRESS, getTokenSymbol, getPoolsData, getWalletData, getAccountCDP, getWalletTokenData, getContractAddrs, getPoolsArray, getPoolData} from '../../client/web3'\n import { getSwapOutput, getDoubleSwapOutput,getPoolValue } from '../../math'\nimport { H1, HR, Colour, Text, Center, Label, Sublabel } from '../components/elements'\n\nexport const BreadcrumbCombo = (props) => {\n\n  return (\n    <div>\n      <H1>{props.title}</H1>\n      <Breadcrumb>\n        <Breadcrumb.Item><Link to={props.link}>{props.parent}</Link></Breadcrumb.Item>\n        <Breadcrumb.Item>{props.child}</Breadcrumb.Item>\n      </Breadcrumb>\n    </div>\n  )\n}\n\nexport const InputPane = (props) => {\n  const styles = {\n    marginLeft: 10\n  }\n\n  return (\n    <div style={styles}>\n      <Row>\n        <Col xs={24}>\n          <Input onChange={props.onInputChange}\n            placeholder={convertFromWei(props.paneData?.input)}\n            //defaultValue={convertFromWei(props.paneData?.input)}\n            allowClear={true}\n           addonAfter={\n            <TokenDropDown \n            changeToken={props.changeToken}\n            tokenList={props.tokenList} />}\n          ></Input>\n          <Sublabel>Balance:\n            {convertFromWei(props.paneData?.balance)} ({ (props.paneData?.symbol)})</Sublabel>\n        </Col>\n      </Row>\n      <PercentButtonRow changeAmount={props.changeAmount} />\n    </div>\n  )\n}\nexport const InputCheck = (props) => {\n\n  const styles = {\n    marginLeft: 10\n  }\n\n  return (\n    <div style={styles}>\n      <Row>\n        <Col xs={24}>\n          <Input onChange={props.onInputChange}\n            placeholder={props.paneData?.address}\n            // defaultValue={convertFromWei(props.paneData?.input)}\n            allowClear={true}\n            addonAfter={<TokenDropDown \n              changeToken={props.onInputChange}\n              tokenList={props.tokenList} />}\n          ></Input>\n  \n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport const InputPaneStatic = (props) => {\n  //tokenList\n  //paneData: {address, input, balance}\n  //inputChange, changeToken, changeAmount\n  const styles = {\n    marginLeft: 10\n  }\n  return (\n    <div style={styles}>\n      <Row>\n        <Col xs={24}>\n          <Input onChange={props.onInputChange}\n            placeholder={convertFromWei(props.paneData?.input)}\n            // defaultValue={convertFromWei(props.paneData?.input)}\n            allowClear={true}\n            addonAfter={\n              <TokenSymbol\n                symbol={props.tokenSymbol?.symbol} />}\n          ></Input>\n          <Sublabel>Balance:\n            {convertFromWei(props.paneData?.balance)} ({props.tokenSymbol?.symbol})</Sublabel>\n        </Col>\n      </Row>\n      <PercentButtonRow changeAmount={props.changeAmount} />\n    </div>\n  )\n}\n\nexport const OutputPane = (props) => {\n\n  // const [secondToken, setSecondToken] = useState(false)\n\n  // const handleSecondToken = () => {\n  //   secondToken ? setSecondToken(false) : setSecondToken(true)\n  // }\n\n  return (\n    <div style={{ margin: 0 }}>\n      <Center>\n        <Row>\n          <Col xs={24}>\n            <PercentButtonRow changeAmount={props.changeAmount} />\n          </Col>\n        </Row>\n      </Center>\n      {/* <Center>\n        {!secondToken &&\n          <div>\n            <Row>\n              <Col xs={18}>\n                <TokenDropDown />\n              </Col>\n              <Col xs={6}>\n                <Tooltip title=\"Withdraw simultaneously to a second token\">\n                  <Button style={{ marginLeft: 10 }} onClick={handleSecondToken} icon={<PlusCircleOutlined />}></Button>\n                </Tooltip>\n              </Col>\n            </Row>\n          </div>\n        }\n        {secondToken &&\n          <div>\n            <Row>\n              <Col xs={8} style={{ marginLeft: 10 }}>\n                <TokenDropDown />\n              </Col>\n              <Col xs={8} style={{ marginLeft: 10 }}>\n                <TokenDropDown />\n              </Col>\n              <Col xs={4} style={{ marginLeft: 10 }}>\n                <Button onClick={handleSecondToken} icon={<MinusCircleOutlined />}></Button>\n              </Col>\n            </Row>\n          </div>\n        }\n      </Center> */}\n      <br />\n    </div >\n  )\n}\n\nexport const PercentButtonRow = (props) => {\n\n  const change25 = () => { props.changeAmount(25) }\n  const change50 = () => { props.changeAmount(50) }\n  const change75 = () => { props.changeAmount(75) }\n  const change100 = () => { props.changeAmount(100) }\n\n  const btnStyle = {\n    marginRight: 3.5,\n    marginTop: 10,\n  }\n  return (\n    <>\n      <Row style={{ marginBottom: 10 }}>\n        <Col xs={24}>\n          <Button type=\"dashed\" style={btnStyle} onClick={change25}>25%</Button>\n          <Button type=\"dashed\" style={btnStyle} onClick={change50}>50%</Button>\n          <Button type=\"dashed\" style={btnStyle} onClick={change75}>75%</Button>\n          <Button style={btnStyle} onClick={change100}>ALL</Button>\n        </Col>\n      </Row>\n    </>\n  )\n}\nexport const LiquidButtonRow = (props) => {\n\n  const change10 = () => { props.changeAmount(10) }\n  const change15 = () => { props.changeAmount(15) }\n  const change25 = () => { props.changeAmount(25) }\n  const change33 = () => { props.changeAmount(33) }\n\n  const btnStyle = {\n    marginRight: 5,\n    marginTop: 10,\n  }\n  return (\n    <>\n      <Row style={{ marginBottom: 10 }}>\n        <Col xs={24}>\n          <Button type=\"dashed\" style={btnStyle} onClick={change10}>10%</Button>\n          <Button type=\"dashed\" style={btnStyle} onClick={change15}>15%</Button>\n          <Button type=\"dashed\" style={btnStyle} onClick={change25}>25%</Button>\n          <Button style={btnStyle} onClick={change33}>MAX 33%</Button>\n        </Col>\n      </Row>\n    </>\n  )\n}\n\nexport const TokenDropDown = (props) => {\n   const context = useContext(Context)\n  const [symbol, setSymbol] = useState()\n  const [arraySymbols, setArraySymbols] = useState([])\n  useEffect(() => {\n    buildArray()\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.tokenList])\n\n  const buildArray = () => {\n    if (props.tokenList) {\n      setSymbol(getTokenSymbol(MAI_ADDRESS, context.walletData))\n      const symbols = []\n      for (let i = 0; i < props.tokenList.length; i++) {\n          const symbol = getTokenSymbol(props.tokenList[i],context.walletData)\n          symbols.push(symbol)\n      }\n      setArraySymbols(symbols)\n    }\n  }\n\n  const handleMenuClick = async (e) => {\n    console.log(props.tokenList[e.key])\n    setSymbol( getTokenSymbol(props.tokenList[e.key], context.walletData))\n    \n    props.changeToken(props.tokenList[e.key])\n  }\n\n  const style = {\n    width: 100,\n    // background: Colour().white,\n    // padding:'-20px'\n  }\n\n  const menu = (\n    <Menu>\n      {arraySymbols.map((item, index) => (\n        <Menu.Item key={index} onClick={handleMenuClick}>\n          <Row >\n            <Col xs={8} style={{ paddingLeft: 2 }}>\n              <ColourCoin symbol={item} size={22} />\n            </Col>\n            <Col xs={8} style={{ paddingLeft: 2 }}>\n              {item}\n            </Col>\n          </Row>\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n  return (\n    <div>\n      <Dropdown overlay={menu}>\n        {/* <Button style={{ width: 120 }}> */}\n        <Row style={style}>\n          <Col xs={8} style={{ paddingLeft: 2 }}>\n            <ColourCoin symbol={symbol} size={22} />\n          </Col>\n          <Col xs={8} style={{ paddingLeft: 2 }}>\n            {symbol}\n          </Col>\n          <Col xs={8} style={{ paddingLeft: 2 }}>\n            <DownOutlined />\n          </Col>\n        </Row>\n        {/* </Button> */}\n      </Dropdown>\n    </div>\n\n  )\n\n}\nexport const TokenSymbol = (props) => {\n\n  useEffect(() => {\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.symbol])\n\n  const style = {\n    width: 80,\n    // background: Colour().white,\n    // padding:'-20px'\n  }\n  return (\n    <div>\n      <Row style={style}>\n        <Col xs={8} style={{ paddingLeft: 2 }}>\n          <ColourCoin symbol={props.symbol} size={22} />\n        </Col>\n        <Col xs={8} style={{ paddingLeft: 2 }}>\n          {props.symbol}\n        </Col>\n        <Col xs={8} style={{ paddingLeft: 2 }}>\n\n        </Col>\n      </Row>\n    </div>\n\n  )\n\n}\n\nexport const PoolPane = (props) => {\n\n  const poolStyles = {\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderRadius: 5,\n    borderColor: Colour().grey,\n    margin: 20,\n    padding: 10,\n    width: 400\n  }\n\n  const colStyles = {\n    display: 'flex',\n    textAlign: 'center'\n  }\n\n  return (\n    <div>\n      <Col xs={24} sm={24} xl={24} style={poolStyles}>\n        <Row>\n          <Col xs={24}>\n            <ColourCoin symbol={props.symbol} size={40} />\n            <Center><Text size={30} margin={\"-40px 0px 5px 0px\"}>{convertFromWei(props?.balance) +\" \"+ props.pool.symbol}</Text></Center>\n            <Center><Label margin={\"0px 0px 0px 0px\"}>${convertFromWei(getPoolValue(props?.pool, props?.price))}</Label></Center>\n            <Center><Sublabel margin={\"0px 0px 5px 0px\"}>Pool Value</Sublabel></Center>\n\n            {!props.hideSubpane &&\n              <div>\n                <HR />\n                <Row style={colStyles}>\n                  <Col xs={8}>\n                    <Label>{props.data.field1.data}</Label><br />\n                    <Sublabel>{props.data.field1.title}</Sublabel>\n                  </Col>\n                  <Col xs={8}>\n                    <Label>{props.data.field2.data}</Label><br />\n                    <Sublabel>{props.data.field2.title}</Sublabel>\n                  </Col>\n                  <Col xs={8}>\n                    <Label>{props.data.field3.data}</Label><br />\n                    <Sublabel>{props.data.field3.title}</Sublabel>\n                  </Col>\n                </Row>\n              </div>\n            }\n          </Col>\n        </Row>\n      </Col>\n    </div>\n  )\n}\n\nconst ColourCoin = (props) => {\n  const symbol = props.symbol ? props.symbol : 'XXX'\n  const numbers = getIntFromName(symbol)\n  const startCol = rainbowStop(numbers[0])\n  const stopCol = rainbowStop(numbers[1])\n  const coinName = symbol.length > 4 ? symbol.substr(0, 4) : symbol\n\n  const coinStyle = {\n    fontWeight: '500',\n    letterSpacing: '0.3px',\n    textTransform: 'uppercase',\n    color: Colour().white,\n    fontSize: props.size / 3,\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: '50%',\n    width: props.size,\n    height: props.size,\n    background: `linear-gradient(45deg, ${startCol}, ${stopCol})`,\n  }\n\n  return (\n    <div >\n      <Row style={coinStyle}>\n        <Col>\n          <span>{coinName}</span>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport const CoinRow = (props) => {\n\n  const rowStyles = {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n  }\n\n  return (\n    <div>\n      <Row style={rowStyles}>\n        <Col xs={4}>\n          <ColourCoin symbol={props.symbol} size={props.size} />\n        </Col>\n        <Col xs={13}>\n          <Label size={props.size / 2.2}>{props.name}</Label><br />\n        </Col>\n        <Col xs={7}>\n          <Text size={props.size / 2}>{convertFromWei(props.balance)}</Text><br />\n         \n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport const CDPDetails = (props) => {\n\n  const rowStyles = {\n    display: 'flex',\n    marginTop: 15,\n    justifyContent: 'center',\n    alignItems: 'center',\n\n  }\n\n  return (\n    <div>\n      <Row style={rowStyles}>\n        <Col span={4}>\n          <ColourCoin symbol={props.symbol} size={props.size} />\n        </Col>\n        <Col span={12}>\n          <Label size={props.size / 2.2}>{props.name}</Label><br />\n        </Col>\n        <Col span={6}>\n          <Text size={props.size / 2}>{convertFromWei(props.balance)}</Text><br />\n  \n        </Col>\n\n      </Row>\n    </div>\n  )\n}\n\nexport const CLTButtonRow = (props) => {\n\n  const change110 = () => { props.changeAmount(110) }\n  const change125 = () => { props.changeAmount(125) }\n  const change150 = () => { props.changeAmount(150) }\n  const change200 = () => { props.changeAmount(200) }\n\n  const btnStyle = {\n    marginRight: 3.5,\n    marginTop: 10\n  }\n  return (\n    <>\n      <Row style={{ marginBottom: 10 }}>\n        <Col xs={24}>\n          <Button type=\"dashed\" style={btnStyle} onClick={change110}>110%</Button>\n          <Button type=\"dashed\" style={btnStyle} onClick={change125}>125%</Button>\n          <Button type=\"dashed\" style={btnStyle} onClick={change150}>150%</Button>\n          <Button type=\"dashed\" style={btnStyle} onClick={change200}>200%</Button>\n        </Col>\n      </Row>\n    </>\n  )\n}\nexport const CDPPane = (props) => {\n\n  const poolStyles = {\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderRadius: 5,\n    borderColor: Colour().grey,\n    margin: 20,\n    padding: 10,\n    width: 400\n  }\n\n  const colStyles = {\n    display: 'flex',\n    textAlign: 'center'\n  }\n\n  return (\n    <div>\n      <Col xs={24} sm={24} xl={24} style={poolStyles}>\n        <Row>\n          <Col xs={24}>\n            <Divider><Label size={20}>{props.name}</Label> </Divider>\n            <ColourCoin symbol={props.symbol} size={40} />\n            <Center><Text size={30} margin={\"-40px 0px 5px 0px\"}>{convertFromWei(props?.balance)}</Text></Center>\n          \n          </Col>\n        </Row>\n      </Col>\n    </div>\n  )\n}\nexport const RefreshComponent = () =>{\n  const context = useContext(Context)\n  function refreshPage() {\n    window.location.reload(false);\n    context.setContext({update:true})\n  }\n  const refreshStyle = {\n    fontSize: 30,\n  }\n\n  return(<div style={refreshStyle}>\n      <Button type=\"link\" size={'Large'} onClick={refreshPage} icon={<RedoOutlined />}>Refresh </Button>\n  </div>)\n}\n","import React, { useEffect, useContext,useState } from 'react';\nimport { Context } from '../../context'\n import { convertFromWei } from '../../utils'\nimport { Tabs, Table, Card, Row, Col, Button, Divider } from 'antd';\n import { Text, Label, Sublabel, Center } from '../components/elements';\nimport { CoinRow, CDPDetails } from '../components/common';\nimport { Link } from 'react-router-dom'\nimport { } from '../../client/web3'\nimport { EditOutlined, PlusCircleOutlined} from '@ant-design/icons';\nconst { TabPane } = Tabs;\n\nconst DrawerContent = (props) => {\n    const context = useContext(Context)\n    \n    useEffect(() => {   \n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [context.walletData])\n\n\n    function callback(key) {\n        console.log(key);\n    }\n\n    return (\n        <>\n            <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                <TabPane tab=\"ASSETS\" key=\"1\">\n                    <AssetTable />\n                </TabPane>\n                <TabPane tab=\"STAKES\" key=\"2\">\n                    <StakeTable />\n                </TabPane>\n                <TabPane tab=\"CDPS\" key=\"3\">\n                    <CDPTable />\n                </TabPane>\n            </Tabs>\n        </>\n    );\n};\n\nexport default DrawerContent\n\nexport const AssetTable = () => {\n    const context = useContext(Context)\n    useEffect(() => {\n\n    }, [context.walletData])\n    \n    const columns = [\n        {\n            render: (record) => (\n                <div>\n                    <CoinRow\n                            symbol={record.symbol}\n                            name={record.name}\n                            balance={record.balance}\n                            size={32} />\n                </div>\n            )\n        }\n    ]\n\n    return (\n        <div>\n            <Table dataSource={context.walletData?.tokens}\n                pagination={false}\n                showHeader={false}\n                columns={columns}\n                rowKey=\"symbol\" />\n        </div>\n    )\n}\n\nexport const StakeTable = () => {\n\n    const context = useContext(Context)\n\n    useEffect(() => {\n       \n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [context.stakerData])\n\n    const columns = [\n        {\n            render: (record) => (\n                <div>\n                    <CoinRow\n                            symbol={record.symbol}\n                            name={record.name}\n                            balance={record.units}\n                            size={32} />\n                </div>\n            )\n        }\n    ]\n\n    return (\n        <div>\n            <Table dataSource={context.stakerData}\n                pagination={false}\n                showHeader={false}\n                columns={columns}\n                rowKey=\"symbol\" />\n        </div>\n    )\n}\nexport const CDPTable = () => {\n    const context = useContext(Context)\n    const [CDPflag, setCDPFlag] = useState(null)\n\n    useEffect(() => {\n        checkCDP()\n    }, [context.walletData, context.accountCDP])\n    \n    \n    const checkCDP = () => {\n        if(context.accountCDP){\n            setCDPFlag(true)\n        }else{\n            setCDPFlag(false)\n        }\n \n    }\n  \n    return (\n        <div>\n            {CDPflag && \n            <Row  >\n                <Col span={24}>\n                <Divider><Label>Collateral</Label></Divider>\n            <CDPDetails\n            symbol={\"ETH\"}\n            name={\"Ethereum\"}\n            balance={context.accountCDP?.collateral}\n            size={32}\n            />\n            <br></br>\n            <Divider><Label>Debt</Label></Divider>\n            \n            <CDPDetails\n            symbol={\"MAI\"}\n            name={\"MAI Token\"}\n            balance={context.accountCDP?.debt}\n            size={32} />\n            <Link to={\"/cdp/manageCDP\"}>\n            <Center>\n                <Button icon={< EditOutlined/>} style={{marginTop: 20}} type=\"primary\"> Manage CDP</Button>\n                </Center>\n                </Link>\n            </Col>\n\n           </Row>\n        }\n     \n        {!CDPflag &&\n        <Link to={\"/cdp/openCDP\"}>\n            <Center>\n        <Button icon={<PlusCircleOutlined/>}type=\"primary\" >Open a CDP</Button>\n        </Center>\n        </Link>\n        }\n        \n                \n        </div>\n    )\n}","import React, { useState, useEffect, useContext } from 'react'\nimport { Context } from '../../context'\nimport { getAddressShort,delay} from '../../utils'\nimport { Link } from \"react-router-dom\";\nimport { Row, Col, Button, Layout, Menu, Drawer } from 'antd';\nimport { UserOutlined } from '@ant-design/icons';\nimport WalletDrawer from './WalletDrawer'\nimport '../../App.css';\n\nimport {MAI_ADDRESS, ETH_ADDRESS,getMAIPrice, getAllCDPs,getAnchors,getMemberData, getPoolsData,getStakerData, getWalletData, getAccountCDP, getWalletTokenData, getPoolsArray, getPoolData} from '../../client/web3'\n\nconst { Header } = Layout;\n\nconst Headbar = (props) => {\n    const context = useContext(Context)\n    const [visible, setVisible] = useState(false)\n    const [metamask, setMetaMask] =useState(false)\n    const [retry, setRetry]= useState(0)\n    useEffect(() => {\n        getData()\n    }, [context.transaction,metamask])\n\n\n     const getData = async () =>{\n            console.log('new Transaction')\n            let allCDPData = await getAllCDPs()\n           context.setContext({AllCDPData: allCDPData})\n           let ArrayPools = await getPoolsArray()\n           context.setContext({arrayPools : ArrayPools })\n           let PoolsData = await getPoolsData(ArrayPools)\n           context.setContext({PoolsData: PoolsData})\n           context.setContext({AnchorPools: getAnchors(PoolsData)})\n           let maiPrice = await getMAIPrice()\n           context.setContext({maiPrice : maiPrice})\n           context.setContext({MemberData : await getMemberData()})\n           context.setContext({mainPool: getPoolData(ETH_ADDRESS, PoolsData)})\n           if(metamask){\n           let walletData = await getWalletData(ArrayPools)\n           context.setContext({walletData: walletData})\n           let address = walletData.address\n           let stakerData = await getStakerData(address, PoolsData)\n           // context.setContext({chainData: await getChainData()})\n           context.setContext({stakerData: stakerData})\n           context.setContext({ETHData:  getWalletTokenData(ETH_ADDRESS, walletData)})\n           context.setContext({BASEData:  getWalletTokenData(MAI_ADDRESS, walletData)})\n           context.setContext({accountCDP: getAccountCDP(address, allCDPData) })\n         }\n         \n        \n    }\n\n    const addr = () => {\n        return getAddressShort(context.walletData?.address)\n    }\n    \n    const ConnectWallet = async ()=>\n    {   if (window.ethereum) {\n        try {\n          // Request account access if needed\n          let web3 = await window.ethereum.enable();\n          // Acccounts now exposed\n          if(web3){\n            setMetaMask(true)\n          }\n          \n        } catch (error) {\n          // User denied account access...\n        }\n    }\n        \n        \n    }\n\n    const showDrawer = () => {\n        setVisible(true);\n    };\n    const onClose = () => {\n        setVisible(false);\n    };\n\n    return (\n        <Header>\n            <Row>\n                <Col xs={20}>\n                    <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']}>\n                        <Menu.Item key='1'>\n                            <Link to={\"/overview\"}>OVERVIEW</Link>\n                        </Menu.Item>\n                        {/* <Menu.Item key=\"4\">\n                            <Link to={\"/anchor\"}>PRICE ANCHOR</Link>\n                        </Menu.Item>  */}\n                        <Menu.Item key='2'>\n                            <Link to={\"/pools\"}>POOLS</Link>\n                        </Menu.Item>\n                        <Menu.Item key=\"3\">\n                            <Link to={\"/cdps\"}>CDPs</Link>\n                        </Menu.Item>\n                        {/* <Menu.Item key=\"5\">\n                            <Link to={\"/about\"}>ABOUT</Link>\n                        </Menu.Item> */}\n                    </Menu>\n                </Col>\n                <Col xs={4} style={{ textAlign: 'right' }}>\n                    {metamask ? \n                    <Button type=\"primary\" icon={<UserOutlined />} onClick={showDrawer}>{addr()}</Button> :  \n                     <Button type=\"primary\" icon={<UserOutlined />} onClick={ConnectWallet}>Connect</Button>}\n                </Col>\n            </Row>\n            <Drawer\n                title={context.wallet?.address}\n                placement=\"right\"\n                closable={false}\n                onClose={onClose}\n                visible={visible}\n                width={300}\n            >\n                <WalletDrawer />\n            </Drawer>\n\n        </Header>\n    )\n}\n\nexport default Headbar","import { Colour } from './elements';\n\nexport const paneStyles = {\n    borderWidth: '1px',\n    borderStyle: 'solid',\n    borderRadius: 5,\n    borderColor: Colour().lgrey,\n    margin: 10,\n}\n\nexport const colStyles = {\n    padding: 20,\n    backgroundColor: Colour().offwhite\n}\n\n\nexport const rowStyles = {\n    display: 'flex',\n    alignItems: 'center',\n    textAlign: 'center'\n}","import React, { useEffect,useState, useContext} from 'react'\nimport { Context } from '../../context'\nimport {Link} from 'react-router-dom'\nimport { Row, Col } from 'antd'\nimport { HR, H1, H2, Text, LabelGroup, Button, Gap,LabelLG,Label,Logo  } from '../components/elements';\nimport { rowStyles} from '../components/styles'\nimport { formatUSD, convertFromWei } from '../../utils'\nimport {getPoolCount} from '../../client/web3'\n\nconst Overview = (props) => {\n    const context = useContext(Context)\n    const [poolCount, setPoolCount] = useState(0)\n    const [stakersCount, setStakersCount] = useState(0)\n    const [maiPrice, setMaiPrice] = useState(0)\n\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    },[context.arrayPools, context.MemberData, context.maiPrice])\n\n    const getData = () => {\n         setPoolCount( getPoolCount(context.arrayPools))\n         setStakersCount(context.MemberData)\n         setMaiPrice(context.maiPrice)\n    }\n\n    // const volume = () => {\n    //     return `$${().toFixed(2)}`\n    // }\n    return (\n        <div>\n            \n            <Row style={{marginBottom:50}}>\n                <Col xs={17} >\n                <H1>MAI Stablecoin</H1>\n                <br></br>\n                <H2>A decentralised stablecoin with built-in liquidity</H2>\n                <br></br>\n                <Text>MAI is a stablecoin that uses collaterised debt positions as the buyer and seller of last resort. \n                MAI is anchored to $1.00 by a system of incentives in liquidity pools of other USD assets.\n                MAI is the settlement asset in token pools to drive MAI liquidity and demand.\n                The liquidity pools are used for liquidations, which ensure sustainable, deterministic and permissionless liquidation of unhealthy CDPs. \n                MAI is governance-minimal, letting staked capital drive all decision-making. </Text>\n                <br></br>\n                </Col>\n                <Col xs={2} style={{marginLeft:50}}>\n                    <Row>\n                        <Col style={{marginTop:60}}>\n    <LabelLG>${convertFromWei(maiPrice)}</LabelLG>\n                            <br></br>\n                            <Label>MAI PRICE (USD)</Label>\n                        </Col>\n                        \n                    </Row>\n                </Col>\n\n                <Col xs={2} style={{marginTop:60}}>\n                \n                <Logo/>\n                </Col> \n            </Row>\n            \n            <Row  style={rowStyles} >\n                <Col xs={3}>\n                    <LabelGroup size={32} label={'POOLS'} title={poolCount} />\n                </Col>\n                <Col xs={9}>\n                    <LabelGroup size={32}  label={'VOLUME'} title={formatUSD(convertFromWei(context.networkData?.volume))} />\n                </Col>\n                <Col xs={3}>\n                    <LabelGroup size={32}  label={'USERS'} title={context.networkData?.users}/>\n                </Col>\n                <Col xs={9}>\n                    <LabelGroup size={32}  label={'TOTAL STAKERS'} title={stakersCount} />\n                </Col>\n            </Row>\n            <Gap/>\n            <H2>POOLS</H2><br></br>\n            <Text>You can provide liquidity and trade across pools</Text><br/>\n            <Link to={\"/pools\"}><Button type=\"primary\">POOLS</Button></Link>\n            <Gap></Gap>\n            {/* <H2>CDPs</H2><br></br>\n            <Text>You can create debt from pooled assets</Text><br/>\n            <Link to={\"/pools\"}><Button type=\"primary\">CDPS</Button></Link> */}\n\n        </div>\n    )\n}\n\nexport default Overview","import React, { useEffect, useContext, useState } from 'react'\nimport { Context } from '../../context'\nimport { Link } from 'react-router-dom'\nimport { Table, Alert, Row, Col,Tabs } from 'antd'\nimport { convertFromWei, delay } from '../../utils'\n// import { getPrice } from '../../math'\nimport { PlusCircleOutlined, SwapOutlined, LoginOutlined, LoadingOutlined } from '@ant-design/icons';\n\nimport { H1, Button, Center,Label } from '../components/elements'\nconst { TabPane } = Tabs;\nconst Pools = (props) => {\n    function callback(key) {\n        console.log(key);\n    }\n    return (\n        <>\n            <H1>POOLS</H1>\n            <br />\n            <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                <TabPane tab={<span> All POOLS\n                </span>} key=\"1\">\n                <PoolTable />\n                </TabPane>\n                <TabPane tab=\"ANCHOR POOLS\" key=\"2\">\n            <AnchorTable/>\n            </TabPane>\n                \n            </Tabs>\n           \n            \n        </>\n    )\n}\n\nexport default Pools\n\nconst PoolTable = (props) => {\n    const context = useContext(Context)\n    const [retry, setRetry] = useState(0)\n    const [connected, setConnected] = useState(false)\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [context.PoolsData, retry])\n\n    const getData = async () => {\n        if (context.PoolsData) {\n            setConnected(true)\n            // console.log(context.PoolsData)\n            // console.log(context.stakerData)\n            //setconnected\n        } else {\n            await delay(2000)\n            setRetry(parseInt(retry) + 1)\n        }\n        \n\n    }\n\n    const columns = [\n        {\n            title: 'Pool',\n            dataIndex: 'symbol',\n            key: 'symbol',\n            render: (symbol) => (\n                <h3>{symbol}</h3>\n            )\n        },\n        {\n            title: 'Price (USD)',\n            dataIndex: 'price',\n            key: 'price',\n            render: (price) => (\n                <p>{'$' + convertFromWei(price)}</p>\n            )\n        },\n        {\n            title: 'Balance ',\n            dataIndex: 'balance',\n            key: 'balance',\n            render: (balance) => (\n                <p>{convertFromWei(balance)}</p>\n            )\n        },\n        {\n            title: 'Depth (MAI)',\n            dataIndex: 'depth',\n            key: 'depth',\n            render: (depth) => (\n                <p>{convertFromWei(depth)}</p>\n            )\n        },\n        {\n            title: 'Description',\n            dataIndex: 'isAnchor',\n            key: 'isAnchor',\n            render: (isAnchor) => (\n                <p>{isAnchor ? <Label>Anchor Pool</Label> : <Label>Pool</Label>}</p>\n            )\n        },\n        \n        // {\n        //     title: 'Volume',\n        //     dataIndex: 'volume',\n        //     key: 'volume',\n        //     render: (volume) => (\n        //         <p>{formatUSD(convertFromWei(volume))}</p>\n        //     )\n        // },\n        // {\n        //     title: 'TX Count',\n        //     dataIndex: 'txCount',\n        //     key: 'txCount',\n        //     render: (txCount) => (\n        //         <p>{txCount.toLocaleString()}</p>\n        //     )\n        // },\n        // {\n        //     title: 'ROI',\n        //     dataIndex: 'roi',\n        //     key: 'roi',\n        //     render: (roi) => (\n        //         <p>{roi * 100}%</p>\n        //     )\n        // },\n        {\n            render: (record) => (\n                \n                        <div style={{ textAlign: 'right' }}>\n                        <Row justify=\"end\">\n                            {/* <Col>\n                            {context.walletData ? <div></div> : \n                            <Alert type=\"error\" message=\"Please Connect Your Wallet\" banner />\n        }\n                            </Col> */}\n                        <Col  >\n                            {context.walletData ?\n                                <Link to={`/pool/stake?token=${record.address}`}>\n                                    <Button icon={<LoginOutlined />}>STAKE</Button>\n                                </Link> :\n                                <Button disabled icon={<LoginOutlined />}>STAKE</Button>\n                            }\n                            \n                            </Col>\n                            <Col  >\n                            {context.walletData ?\n                                <Link to={`/pool/swap?token=${record.address}`}>\n                                    <Button type='primary' icon={<SwapOutlined />}>SWAP</Button>\n                                </Link> :\n                                <Button type='primary' disabled icon={<SwapOutlined />} >SWAP</Button>\n\n                            }\n                            </Col>\n                            \n                            </Row>\n                        </div>\n                        \n                 \n\n                \n            \n            )\n        }\n    ]\n\n    const tableStyles = {\n        margin: 0,\n        padding: 0\n    }\n    const refreshStyles = {\n        fontSize: 40,\n        paddingTop: 40,\n        paddingBottom: 40\n    }\n    return (\n        <>\n            {connected ?\n                <Table style={tableStyles} dataSource={context.PoolsData} columns={columns} rowKey=\"symbol\" /> :\n                <div style={refreshStyles}>\n                    <Center><LoadingOutlined /></Center>\n                </div>\n            }\n            <Link to={\"/pool/create\"}><Button type=\"primary\" icon={<PlusCircleOutlined />}>CREATE POOL</Button>\n            </Link>\n\n        </>\n    )\n}\n\nconst AnchorTable = (props) => {\n    const context = useContext(Context)\n    const [retry, setRetry] = useState(0)\n    const [connected, setConnected] = useState(false)\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [context.AnchorPools, retry])\n\n    const getData = async () => {\n        if (context.AnchorPools) {\n            setConnected(true)\n            //setconnected\n        } else {\n            await delay(2000)\n            setRetry(parseInt(retry) + 1)\n        }\n        \n\n    }\n\n    const columns = [\n        {\n            title: 'Pool',\n            dataIndex: 'symbol',\n            key: 'symbol',\n            render: (symbol) => (\n                <h3>{symbol}</h3>\n            )\n        },\n        {\n            title: 'Price (USD)',\n            dataIndex: 'price',\n            key: 'price',\n            render: (price) => (\n                <p>{'$' + convertFromWei(price)}</p>\n            )\n        },\n        {\n            title: 'Balance ',\n            dataIndex: 'balance',\n            key: 'balance',\n            render: (balance) => (\n                <p>{convertFromWei(balance)}</p>\n            )\n        },\n        {\n            title: 'Depth (MAI)',\n            dataIndex: 'depth',\n            key: 'depth',\n            render: (depth) => (\n                <p>{convertFromWei(depth)}</p>\n            )\n        },\n        // {\n        //     title: 'TX Count',\n        //     dataIndex: 'txCount',\n        //     key: 'txCount',\n        //     render: (txCount) => (\n        //         <p>{txCount.toLocaleString()}</p>\n        //     )\n        // },\n        // {\n        //     title: 'ROI',\n        //     dataIndex: 'roi',\n        //     key: 'roi',\n        //     render: (roi) => (\n        //         <p>{roi * 100}%</p>\n        //     )\n        // },\n        {\n            render: (record) => (\n                \n                        <div style={{ textAlign: 'right' }}>\n                        <Row justify=\"end\">\n                          \n                        <Col  >\n                            {context.walletData ?\n                                <Link to={`/pool/stake?token=${record.address}`}>\n                                    <Button icon={<LoginOutlined />}>STAKE</Button>\n                                </Link> :\n                                <Button disabled icon={<LoginOutlined />}>STAKE</Button>\n                            }\n                            \n                            </Col>\n                            <Col  >\n                            {context.walletData ?\n                                <Link to={`/pool/swap?token=${record.address}`}>\n                                    <Button type='primary' icon={<SwapOutlined />}>SWAP</Button>\n                                </Link> :\n                                <Button type='primary' disabled icon={<SwapOutlined />} >SWAP</Button>\n\n                            }\n                            </Col>\n                            \n                            </Row>\n                        </div>\n                        \n                 \n\n            \n            )\n        }\n    ]\n\n    const tableStyles = {\n        margin: 0,\n        padding: 0\n    }\n    const refreshStyles = {\n        fontSize: 40,\n        paddingTop: 40,\n        paddingBottom: 40\n    }\n    return (\n        <>\n            {connected ?\n                <Table style={tableStyles} dataSource={context.AnchorPools} columns={columns} rowKey=\"symbol\" /> :\n                <div style={refreshStyles}>\n                    <Center><LoadingOutlined /></Center>\n                </div>\n            }\n            <Link to={\"/anchor/create\"}><Button type=\"primary\" icon={<PlusCircleOutlined />}>CREATE ANCHOR</Button>\n            </Link>\n\n        </>\n    )\n}","import React, { useEffect, useContext, useState } from 'react';\nimport { Context } from '../../context'\nimport { Link } from 'react-router-dom'\n\nimport { getSafeCDPs, getUnSafeCDPs,} from '../../client/web3'\nimport { convertFromWei,getAddressShort,delay } from '../../utils'\n// import { getLiquidationFee } from '../../math'\n\nimport { BreadcrumbCombo} from '../components/common'\nimport { H1} from '../components/elements'\n\nimport { EditOutlined, PlusCircleOutlined, AimOutlined,WarningOutlined,LoadingOutlined } from '@ant-design/icons';\nimport { Row, Col, Card, Divider, Button, Table, Form, Input, Tabs,Tag, Alert } from \"antd\"\n\nconst { TabPane } = Tabs;\nconst CDPs = () => {\n    const context = useContext(Context)\n    const [visible, setVisible] = useState(false);\n    const [connected, setConnected] = useState(false)\n    const [CDPExist, setCDPExist] = useState(null)\n\n    useEffect(() => {\n        checkConnected()\n        checkForCDP()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [context.walletData, context.accountCDP])\n\n    const checkConnected = async () => {\n        if(context.walletData){\n            setConnected(true) \n        } else {\n            setConnected(false)\n        }\n    }\n    const checkForCDP = () => {\n        if(context.accountCDP){\n            setCDPExist(true)\n        }\n    }\nconst alert = () => {\n    setVisible(true)\n}\n    function callback(key) {\n        console.log(key);\n    }\n    return (\n        <div>\n            <H1>CDPs</H1>\n            <br />\n            <Tabs defaultActiveKey=\"1\" onChange={callback}>\n                <TabPane tab={<span> All CDPs\n                </span>} key=\"1\">\n                    <CDPTable />\n                </TabPane>\n                \n            </Tabs>\n            {connected && \n            <Row>\n            {CDPExist && \n            <Link to={\"/cdp/manageCDP\"}><Button type=\"primary\"icon={< EditOutlined/>}>Manage Your CDP</Button>\n            </Link>\n            }\n            {!CDPExist && \n            <Link to={\"/cdp/openCDP\"}><Button type=\"primary\"icon={<PlusCircleOutlined />}>Open CDP</Button>\n            </Link>\n            }\n            </Row>\n            }\n            {!connected && \n                <Row>\n                <Button onClick={alert} type=\"primary\" icon={<PlusCircleOutlined />}>Open CDP</Button> \n                {visible && \n                    <Alert type=\"error\" message=\"Please Connect Your Wallet\" banner />\n                    }\n                  </Row>  \n            }\n            \n\n        </div>\n    )\n}\nexport default CDPs\n\nexport const CDPTable = () => {\n    const context = useContext(Context)\n    const [retry, setRetry]= useState(0)\n    const [connected, setConnected] = useState(false)\n    //const [liquidFee, setLiquidFee] = useState(null)\n\n    useEffect(() => {\n        getData()\n    }, [context.AllCDPData, retry])\n\n    const getData = async () => {\n        if(context.AllCDPData){\n            setConnected(true)\n        //setconnected\n        }else{\n            await delay(1000)\n            setRetry(parseInt(retry) + 1)\n        }\n        \n    }\n    \n    const columns = [\n        {\n            title: 'CDP ',\n            dataIndex: 'cdp',\n            key: 'cdp',\n            render: (cdp) => (\n                <h3>{cdp}</h3>\n            )\n        },\n        {\n            title: 'Address',\n            dataIndex: 'address',\n            key: 'address',\n            render: (address) => (\n                <p>{getAddressShort(address)}</p>\n            )\n        },\n        {\n            title: 'Collateral Size (ETH)',\n            dataIndex: 'collateral',\n            key: 'Collateral',\n            render: (collateral) => (\n                <p>{convertFromWei(collateral)}</p>\n            )\n        }, {\n            title: 'Amount Owing (MAI)',\n            dataIndex: 'debt',\n            key: 'debt',\n            render: (debt) => (\n                <p>{convertFromWei(debt)}</p>\n            )\n        },\n        {\n            title: 'Status',\n            key: 'canLiquidate',\n            dataIndex: 'canLiquidate',\n            render: (canLiquidate) => (\n                <Tag color={canLiquidate === true ? 'red' : 'green'} key={canLiquidate}>\n                {canLiquidate ? \"UNSAFE\": \"SAFE\"}\n              </Tag>\n            )\n          },\n          {\n            title: 'Action',\n            \n            render: (record) => (\n              <Link to={`/cdp/Liquidate?CDP=${record.cdp}`}>\n              {record.canLiquidate ? \n              <Button icon={<AimOutlined />}>Liquidate CDP</Button>: <div></div>}</Link> \n            )\n          }\n          \n    ]\n    const tableStyles = {\n        marginRight: 30,\n        padding: 0\n    }\n\n    return (\n        <div>\n            {!connected && \n        <LoadingOutlined />\n        }\n        {connected && \n            <Table style={tableStyles} dataSource={context.AllCDPData} columns={columns} rowKey=\"cdp\" />\n            }\n        \n            </div>\n    )\n}\n","import React, { useEffect, useContext, useState } from 'react'\nimport { Context } from '../../context'\nimport { Link } from 'react-router-dom'\nimport { Table, Alert, Row, Col } from 'antd'\nimport { convertFromWei, delay } from '../../utils'\n// import { getPrice } from '../../math'\nimport { PlusCircleOutlined, SwapOutlined, LoginOutlined, LoadingOutlined } from '@ant-design/icons';\n\nimport { H1, Button, Center } from '../components/elements'\n\nconst Anchors = (props) => {\n\n    return (\n        <>\n            <H1>ANCHOR POOLS</H1>\n            <br />\n            <AnchorTable />\n        </>\n    )\n}\n\nexport default Anchors\n\nconst AnchorTable = (props) => {\n    const context = useContext(Context)\n    const [retry, setRetry] = useState(0)\n    const [connected, setConnected] = useState(false)\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [context.AnchorPools, retry])\n\n    const getData = async () => {\n        if (context.AnchorPools) {\n            setConnected(true)\n            //setconnected\n        } else {\n            await delay(2000)\n            setRetry(parseInt(retry) + 1)\n        }\n        \n\n    }\n\n    const columns = [\n        {\n            title: 'Pool',\n            dataIndex: 'symbol',\n            key: 'symbol',\n            render: (symbol) => (\n                <h3>{symbol + \":MAI\"}</h3>\n            )\n        },\n        {\n            title: 'Price (USD)',\n            dataIndex: 'price',\n            key: 'price',\n            render: (price) => (\n                <p>{'$' + convertFromWei(price)}</p>\n            )\n        },\n        {\n            title: 'Balance ',\n            dataIndex: 'balance',\n            key: 'balance',\n            render: (balance) => (\n                <p>{convertFromWei(balance)}</p>\n            )\n        },\n        {\n            title: 'Depth (MAI)',\n            dataIndex: 'depth',\n            key: 'depth',\n            render: (depth) => (\n                <p>{convertFromWei(depth)}</p>\n            )\n        },\n        \n        // {\n        //     title: 'Volume',\n        //     dataIndex: 'volume',\n        //     key: 'volume',\n        //     render: (volume) => (\n        //         <p>{formatUSD(convertFromWei(volume))}</p>\n        //     )\n        // },\n        // {\n        //     title: 'TX Count',\n        //     dataIndex: 'txCount',\n        //     key: 'txCount',\n        //     render: (txCount) => (\n        //         <p>{txCount.toLocaleString()}</p>\n        //     )\n        // },\n        // {\n        //     title: 'ROI',\n        //     dataIndex: 'roi',\n        //     key: 'roi',\n        //     render: (roi) => (\n        //         <p>{roi * 100}%</p>\n        //     )\n        // },\n        {\n            render: (record) => (\n                \n                        <div style={{ textAlign: 'right' }}>\n                        <Row justify=\"end\">\n                            <Col>\n                            {context.walletData ? <div></div> : \n                            <Alert type=\"error\" message=\"Please Connect Your Wallet\" banner />\n        }\n                            </Col>\n                        <Col  >\n                            {context.walletData ?\n                                <Link to={`/pool/stake?token=${record.address}`}>\n                                    <Button icon={<LoginOutlined />}>STAKE</Button>\n                                </Link> :\n                                <Button disabled icon={<LoginOutlined />}>STAKE</Button>\n                            }\n                            \n                            </Col>\n                            <Col  >\n                            {context.walletData ?\n                                <Link to={`/pool/swap?token=${record.address}`}>\n                                    <Button type='primary' icon={<SwapOutlined />}>SWAP</Button>\n                                </Link> :\n                                <Button type='primary' disabled icon={<SwapOutlined />} >SWAP</Button>\n\n                            }\n                            </Col>\n                            \n                            </Row>\n                        </div>\n                        \n                 \n\n                \n            \n            )\n        }\n    ]\n\n    const tableStyles = {\n        margin: 0,\n        padding: 0\n    }\n    const refreshStyles = {\n        fontSize: 40,\n        paddingTop: 40,\n        paddingBottom: 40\n    }\n    return (\n        <>\n            {connected ?\n                <Table style={tableStyles} dataSource={context.AnchorPools} columns={columns} rowKey=\"symbol\" /> :\n                <div style={refreshStyles}>\n                    <Center><LoadingOutlined /></Center>\n                </div>\n            }\n            <Link to={\"/anchor/create\"}><Button type=\"primary\" icon={<PlusCircleOutlined />}>CREATE ANCHOR</Button>\n            </Link>\n\n        </>\n    )\n}","import React, { useState, useContext, useEffect } from 'react'\nimport { Context } from '../../context'\nimport { Tabs, Row, Col,Alert,Form,Input } from 'antd';\nimport {withRouter} from 'react-router-dom';\nimport { PlusCircleOutlined,LoadingOutlined, MinusCircleOutlined } from '@ant-design/icons';\n\nimport { BreadcrumbCombo, InputPaneStatic, PoolPane,PercentButtonRow } from '../components/common'\nimport '../../App.css';\nimport { Center, Button, LabelGroup,H2,Sublabel,H1 } from '../components/elements';\nimport { paneStyles, colStyles, rowStyles } from '../components/styles'\n\nimport { getStakeUnits, getPoolShare } from '../../math'\nimport { convertToWei, convertFromWei, bn, delay} from '../../utils'\nimport {  getWalletTokenData,getPoolData,getAccountStakeData,getTokenSymbol, getMAIContract,getTokenContract, MAI_ADDRESS, ETH_ADDRESS, getStakerData  } from '../../client/web3'\n\nconst { TabPane } = Tabs;\n\nconst Stake = (props) => {\n    const context = useContext(Context)\n    const [tokenStakeAddress, setTokenStakeAddress] = useState(null)\n    const [retry, setRetry]= useState(0)\n    const [account, setAccount] = useState(null)\n    const [stakerData, setStakerData]= useState(null)\n    const [mainPool, setMainPool] = useState({\n        'symbol': '',\n        'address': '',\n        'price': 0,\n        'volume': 0,\n        'depth': 0,\n        'balance': 0,\n        'txCount': 0,\n        'roi': 0,\n        'units': 0\n    })\n    const [tokenStakeData, setTokenStakeData] = useState({\n        address: '',\n        symbol:'',\n        balance: 0,\n        input: 0,\n    })\n    const [baseStakeData, setBaseStakeData] = useState({\n        address: '',\n        symbol:'',\n        balance: 0,\n        input: 0,\n    })\n    const [unStakeData, setUnstakeData] = useState({\n        address: '',\n        input: 50\n    })\n    const [hideSubpane, setHideSubPane] = useState(true)\n    const [stakeUnits, setStakeUnits] = useState(0)\n    const [shareData, setShareData] = useState({\n        base:0,\n        token:0\n    })\n\n    useEffect(() => {\n        getData()\n       \n    }, [context.walletData,retry])\n\n    const getData = async () => {\n        if(context.walletData && context.stakerData){\n            const address = context.walletData?.address\n            setAccount(address)\n                const search = props.location.search; \n                const params = new URLSearchParams(search);\n                const tokenAddress = params.get('token'); \n                setMainPool(getPoolData(tokenAddress, context.PoolsData))\n                setTokenStakeAddress(tokenAddress)\n                context.setContext({mainPool: getPoolData(tokenAddress, context.PoolsData ) })\n                const inputTokenData = getWalletTokenData(tokenAddress, context.walletData)\n                setTokenStakeData( getStakeData(inputTokenData.balance, tokenAddress))\n                const inputBaseData =  getWalletTokenData(MAI_ADDRESS, context.walletData)\n                setBaseStakeData( getStakeData(inputBaseData.balance, MAI_ADDRESS))\n                setUnstakeData(getunStakeData(50, tokenAddress))\n                const stake = {\n                    token: inputTokenData.balance,\n                    base: inputBaseData.balance\n                }\n                setStakerData(getAccountStakeData(tokenAddress,context.stakerData))\n                setStakeUnits(0)\n                const unitData =  {\n                    stakeUnits:stakeUnits,\n                    totalUnits:mainPool.units\n                }\n                const share = getPoolShare(unitData, mainPool)\n                setShareData(0)\n            \n        }else{\n            await delay(1000)\n            setRetry(parseInt(retry)+1)\n        }\n    }\n\n\n    const onTokenChange =  (e) => {\n        const input = e.target.value\n        setTokenStakeData( getStakeData(convertToWei(input), tokenStakeData.address))\n        const stake = {\n            token: convertToWei(input),\n            base : baseStakeData.input\n        }\n        setStakeUnits(getStakeUnits(stake, context.mainPool))\n    }\n\n    // const changeTokenStake =  (token) => {\n    //     const inputTokenData =  getWalletTokenData(token, context.walletData)\n    //     setTokenStakeData( getStakeData(inputTokenData.balance, token))\n    //     const stake = {\n    //         token: inputTokenData.balance,\n    //         base: baseStakeData.input\n    //     }\n    //     setStakeUnits(getStakeUnits(stake, context.mainPool))\n    // }\n\n    const changeStakeTokenAmount =  (amount) => {\n        const finalAmt = (amount * tokenStakeData?.balance) / 100\n        setTokenStakeData( getStakeData(finalAmt, tokenStakeData.address))\n        const stake = {\n            token: finalAmt,\n            base: baseStakeData.input\n        }\n        setStakeUnits(getStakeUnits(stake, context.mainPool))\n    }\n\n    // const changeBaseStake = async (token) => {\n    //     console.log(\"changing sell tokens not enabled yet\")\n    // }\n\n    const onBaseChange = (e) => {\n        const input = e.target.value\n        setBaseStakeData( getStakeData(convertToWei(input), MAI_ADDRESS))\n        const stake = {\n            token: tokenStakeData.input,\n            base: convertToWei(input)\n        }\n        setStakeUnits(getStakeUnits(stake, context.mainPool))\n    }\n\n    const changeStakeBaseAmount =  (amount) => {\n        const finalAmt = (amount * baseStakeData?.balance) / 100\n        setBaseStakeData( getStakeData(finalAmt, MAI_ADDRESS))\n        const stake = {\n            token: tokenStakeData.input,\n            base: finalAmt\n        }\n        setStakeUnits(getStakeUnits(stake, context.mainPool))\n    }\n\n    const getStakeData =  (input, inputAddress) => {\n        const balance = (getWalletTokenData(inputAddress, context.walletData)).balance\n        const symbol = ( getTokenSymbol(inputAddress, context.walletData))\n        const stakeData = {\n            address: inputAddress,\n            symbol:symbol,\n            balance: balance,\n            input: input,\n        }\n        return stakeData\n    }\n    const stakeAssets = async () => {\n        const contract = getMAIContract()\n        const contractToken = getTokenContract(tokenStakeAddress)\n        const tokenAmount= tokenStakeData.input\n        const baseAmount= baseStakeData.input\n        //console.log(tokenStakeAddress,tokenAmount,baseAmount )\n        if(tokenStakeAddress === ETH_ADDRESS){\n            const tx = await contract.methods.addLiquidityToEtherPool(baseAmount).send({from: account, value:tokenAmount })\n            context.setContext({ transaction: tx })\n            props.history.push('/pools')\n        }else{\n            const tx = await contract.methods.addLiquidityToAssetPool(tokenStakeAddress, tokenAmount,baseAmount ).send({from: account})\n            context.setContext({ transaction: tx })\n            props.history.push('/pools')\n        }\n    }\n    const getunStakeData = (input,tokenStakeAddress) => {\n        const unStakeData = {\n            address: tokenStakeAddress,\n            input: input,\n        }\n        return unStakeData\n    }\n\n    const onUnStakeChange = (e) => {\n        const input = e.target.value\n        setUnstakeData(getunStakeData(input,tokenStakeAddress ))\n        setStakeUnits((stakerData.units*input)/100)\n    }\n    const changeUnstakeAmount = (amount) => {\n        setUnstakeData(getunStakeData(amount, tokenStakeAddress))\n   \n         setStakeUnits((stakerData.units*amount)/100)\n        \n    }\n\n    const unStakeAssets = async () => {\n        const contract = getMAIContract()\n        const unStakeBP = unStakeData.input * 100\n        const unStakePool = unStakeData.address\n       // console.log(unStakeBP,unStakePool, account)\n        const tx = await contract.methods.removeLiquidityPool(unStakePool, unStakeBP).send({from: account})\n        context.setContext({ transaction: tx })\n        props.history.push('/pools')\n    \n    }\n\n    const getShare = () => {\n        //console.log(mainPool.units, stakeUnits.toFixed() )\n        const share = (bn(stakeUnits).div(bn(mainPool.units))).toFixed(2)\n        return (share*100).toFixed(2)\n    }\n    \n\n   const poolAttributes = {\n        field1: {\n            title: 'VOLUME',\n            data: `${(convertFromWei(mainPool?.volume))}`\n        },\n        field2: {\n            title: 'TX COUNT',\n            data: mainPool?.txCount\n        },\n        field3: {\n            title: 'PRICE',\n            data: `$${convertFromWei((mainPool?.price))}`\n        },\n    }\n    const refreshStyles = {\n        fontSize: 40,\n        paddingTop: 40,\n        paddingBottom: 40\n    }\n\n    return (\n        <div>\n            <BreadcrumbCombo title={'STAKE'} parent={'POOLS'} link={'/pools'} child={'STAKE'}></BreadcrumbCombo>\n            {context.stakerData ? \n            <div style={{ marginTop: '-10px' }}>\n               <Center> <H1>{mainPool.symbol} Pool </H1></Center>\n            <Center>\n                {tokenStakeAddress ? \n                <PoolPane\n                    symbol={mainPool?.symbol}\n                    balance={mainPool?.balance}\n                    pool={getPoolData(tokenStakeAddress, context.PoolsData)}\n                    price={convertFromWei(context.maiPrice)}\n                    data={poolAttributes}\n                      hideSubpane={hideSubpane}\n                     />\n                     : <div style={refreshStyles}><Center><LoadingOutlined /></Center></div>}\n                     </Center>\n                     \n            </div> : \n             <Alert type=\"error\" message=\"Please Connect Your Wallet\" banner />}\n             {context.walletData ? <Tabs defaultActiveKey=\"1\">\n                <TabPane tab=\"STAKE\" key=\"1\">\n                <Row style={paneStyles}>\n                        <Col xs={24} style={colStyles}>\n                            <Row >\n                                <Col xs={3}>\n                                </Col>\n                                <Col xs={8} style={{ marginRight: 30 }}>\n                                <Center><H2>1. Set {tokenStakeData.symbol} Amount</H2></Center>\n                                    <InputPaneStatic\n                                         paneData={tokenStakeData}\n                                         tokenSymbol={tokenStakeData}\n                                         onInputChange={onTokenChange}\n                                         changeAmount={changeStakeTokenAmount}\n                                    />\n                                </Col>\n                                <Col xs={2}>\n                                </Col>\n                                <Col xs={8} style={{ marginLeft: 30 }}>\n                                <Center><H2>2. Set {baseStakeData.symbol} Amount</H2></Center>\n                                    <InputPaneStatic\n                                        paneData={baseStakeData}\n                                        tokenSymbol={baseStakeData}\n                                        onInputChange={onBaseChange}\n                                        changeAmount={changeStakeBaseAmount} />\n\n                                    <br />\n                                </Col>\n\n                                <Col xs={3}>\n                                </Col>\n                            </Row>\n                            <Row style={rowStyles}>\n                            <Col xs={2}></Col>\n                                <Col xs={10}>\n                                <Center><LabelGroup size={18} title={`${convertFromWei(stakeUnits.toFixed(0))}`} label={'ESTIMATED UNITS'} /></Center>\n                                </Col>\n                                <Col xs={10}>\n                                <Center><LabelGroup size={18} title={`${getShare()}%`} label={'ESTIMATED SHARE'} /></Center>\n                                </Col>\n                                <Col xs={2}></Col>\n                            </Row>\n                            <br></br>\n                            <Center><Button onClick={stakeAssets} type={'primary'}>STAKE IN POOL</Button></Center>\n\n                        </Col>\n                    </Row>\n                </TabPane>\n                <TabPane tab=\"WITHDRAW\" key=\"2\">\n                <Row style={paneStyles}>\n                        <Col xs={24} style={colStyles}>\n                        <Center><H2>Set Withdraw Amount</H2></Center>\n                            <Row>\n                                <Col xs={8}>\n                                </Col>\n                                <Col xs={8}>\n                                <Form>\n                            \n                                <Input size={'medium'} allowClear onChange={onUnStakeChange} placeholder={unStakeData.input} />\n                        </Form>\n                        <Sublabel>Default 50% </Sublabel>\n                        <PercentButtonRow changeAmount={changeUnstakeAmount} />\n                                </Col>\n                                <Col xs={8}>\n                                </Col>\n                            </Row>\n                            <Row style={rowStyles}>\n                                <Col xs={5}></Col>\n                                <Col xs={7}>\n                                <Center><LabelGroup size={18} title={`${convertFromWei(stakeUnits.toFixed(0))}`} label={'ESTIMATED UNITS'} /></Center>\n                                </Col>\n                                <Col xs={7}>\n                                <Center><LabelGroup size={18} title={`${getShare()}%`} label={'ESTIMATED POOL SHARE'} /></Center>\n                                </Col>\n                                <Col xs={5}></Col>\n                            </Row>\n                            <br></br>\n                            <Center><Button onClick={unStakeAssets}type={'primary'}>WITHDRAW FROM POOL</Button></Center>\n                        </Col>\n                    </Row>\n                </TabPane>\n            </Tabs> : <div style={refreshStyles}></div>}\n            \n        </div>\n    )\n}\n\nexport default withRouter(Stake)\n\n","import React, { useEffect, useState, useContext } from 'react'\nimport { Context } from '../../context'\nimport { Button, Row, Col,Alert } from 'antd';\n\nimport { BreadcrumbCombo, InputPane, PoolPane,InputPaneStatic } from '../components/common'\nimport '../../App.css';\nimport { Center, HR, Text,H2 } from '../components/elements';\nimport { paneStyles, colStyles } from '../components/styles'\nimport {formatBN, convertFromWei, convertToWei,  formatUSD,delay} from '../../utils'\nimport { getSwapOutput, getSwapSlip, getDoubleSwapOutput, getDoubleSwapSlip } from '../../math'\nimport { getPoolData, getMAIContract, getTokenSymbol, getWalletTokenData, filterTokensByPoolSelection,ETH_ADDRESS, MAI_ADDRESS, } from '../../client/web3'\n\nconst Swap = (props) => {\n    const context = useContext(Context)\n    const [retry, setRetry]= useState(0)\n    const [account, setAccount] = useState(null)\n    const [tokenList, setTokenList]= useState([])\n    const [tokenAddress, setTokenAddress] = useState()\n    const [mainPool, setMainPool] = useState({\n        'symbol': 'ETH',\n        'address': ETH_ADDRESS,\n        'price': 0,\n        'volume': 0,\n        'depth': 0,\n        'balance': 0,\n        'txCount': 0,\n        'roi': 0\n    })\n   \n    const [buyData, setBuyData] = useState({\n        address: MAI_ADDRESS,\n        symbol:'MAI',\n        balance: 0,\n        input: 0,\n        output: 0,\n        outputSymbol: \"XXX\",\n        slip: 0\n    })\n    const [sellData, setSellData] = useState({\n        address: '',\n        symbol:'',\n        balance: 0,\n        input: 0,\n        output: 0,\n        outputSymbol: \"XXX\",\n        slip: 0\n    })\n\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [context.walletData, retry])\n\n    const getData = async () => {\n        if (context.walletData) {\n        const address = context.walletData?.address\n        const search = props.location.search; \n        const params = new URLSearchParams(search);\n        const tokenAddress = params.get('token'); \n        setTokenList(filterTokensByPoolSelection(tokenAddress, context.arrayPools, context.walletData ))\n        setMainPool(getPoolData(tokenAddress, context.PoolsData ))\n        setTokenAddress(tokenAddress)\n        setBuyData(getSwapData(0, MAI_ADDRESS, tokenAddress))\n      \n        setSellData(getSwapData(0, tokenAddress, MAI_ADDRESS))\n        setAccount(address)\n        }else{\n            await delay(1000)\n            setRetry(parseInt(retry)+1)\n        }\n    }\n\n    const onBuyChange = async (e) => {\n        // const amt = convertToWei(e.target.value) > buyData.balance ? buyData.balance : convertToWei(e.target.value)\n        setBuyData(getSwapData(convertToWei(e.target.value), buyData.address, mainPool.address))\n    }\n\n    const changeBuyToken = async (token) => {\n        const inputTokenData =  getWalletTokenData(token, context.walletData)\n        setBuyData( getSwapData(inputTokenData.balance, token, mainPool?.address))\n        // const outputTokenData =  getWalletTokenData(inputTokenData, context.walletData)\n        // setSellData( getSwapData(outputTokenData.balance, inputTokenData, token))\n    }\n\n    const changeBuyAmount = async (amount) => {\n        // const amt = amount > buyData.balance ? buyData.balance : amount\n        const finalAmt = (amount * buyData?.balance) / 100\n        setBuyData( getSwapData(finalAmt, buyData.address, ETH_ADDRESS))\n    }\n\n    // const changeSellToken = async (token) => {\n    //     console.log(\"changing sell tokens not enabled yet\")\n    // }\n\n\n    const onSellChange = async (e) => {\n        setSellData(getSwapData(convertToWei(e.target.value), mainPool.address, MAI_ADDRESS))\n    }\n\n    const changeSellAmount = async (amount) => {\n        const amt = amount > sellData.balance ? sellData.balance : amount\n        const finalAmt = (amt * sellData?.balance) / 100\n        setSellData( getSwapData(finalAmt, mainPool.address, MAI_ADDRESS))\n    }\n\n    const getSwapData = (input, inputAddress, outputAddress) => {\n        const balance = (getWalletTokenData(inputAddress, context.walletData)).balance\n        const inputSymbol = getTokenSymbol(inputAddress, context.walletData)\n        const outputSymbol = getTokenSymbol(outputAddress, context.walletData)\n        const mainPool_ = getPoolData(ETH_ADDRESS, context.PoolsData)\n        \n        var buyPool_\n        if (inputAddress === MAI_ADDRESS) {\n            buyPool_ =  getPoolData(ETH_ADDRESS, context.PoolsData)\n           \n        } else {\n            buyPool_ =  getPoolData(inputAddress, context.PoolsData)\n        }\n        var sellPool_ \n        if(outputAddress === MAI_ADDRESS ){\n            sellPool_ = getPoolData(ETH_ADDRESS, context.PoolsData)\n        }else{\n            sellPool_ = getPoolData(outputAddress, context.PoolsData)\n        }\n        var output; var slip\n        if (inputAddress === MAI_ADDRESS && outputAddress === ETH_ADDRESS) {\n            //single swap mai to ETH\n            output = getSwapOutput(input, mainPool_, false)\n            slip = getSwapSlip(input, mainPool_, false)\n        }\n        else if(inputAddress === MAI_ADDRESS && outputAddress !== ETH_ADDRESS){\n            //single swap mai to token\n            output = getSwapOutput(input, sellPool_, false)\n            slip = getSwapSlip(input, sellPool_, false)\n        }\n        else if(inputAddress !== MAI_ADDRESS && inputAddress !== ETH_ADDRESS && outputAddress === MAI_ADDRESS){\n            //single swap token to mai\n            output = getSwapOutput(input, buyPool_, true)\n            slip = getSwapSlip(input, buyPool_, true)\n        }\n        else if (inputAddress !== MAI_ADDRESS && outputAddress === ETH_ADDRESS) {\n            // double token to ETH\n            output = getDoubleSwapOutput(input, buyPool_, mainPool_)\n            slip = getDoubleSwapSlip(input, buyPool_, mainPool_)\n        } \n        else if (inputAddress === ETH_ADDRESS && outputAddress !== MAI_ADDRESS){\n            // double eth to token\n            output = getDoubleSwapOutput(input, mainPool_, sellPool_)\n            slip = getDoubleSwapSlip(input, mainPool_, sellPool_)\n        }\n        else if (inputAddress === ETH_ADDRESS && outputAddress === MAI_ADDRESS){\n            // double eth to mai\n            \n            output = getSwapOutput(input, mainPool_, true)\n            slip = getSwapSlip(input, mainPool_, true)\n        }\n        else {\n            // double token to token\n            output = getDoubleSwapOutput(input, buyPool_, sellPool_)\n            slip = getDoubleSwapSlip(input,buyPool_, sellPool_)\n        }\n        const swapData = {\n            address: inputAddress,\n            symbol: inputSymbol,\n            balance: balance,\n            input: input,\n            output: formatBN(output),\n            outputSymbol: outputSymbol,\n            slip: slip\n        }\n        return swapData\n    }\n \n    const Buy = async ()=>{\n        const contract = getMAIContract()\n        const addressFrom = buyData.address\n        const tokenTo = mainPool.address\n        const input = (buyData.input).toFixed()\n       // console.log(addressFrom, tokenTo, input)\n       if(addressFrom === ETH_ADDRESS){\n        const tx = await contract.methods.swapTokenToToken(addressFrom,tokenTo, input).send({ from: account, value:input})\n        context.setContext({ transaction: tx })\n       }else{\n        const tx = await contract.methods.swapTokenToToken(addressFrom,tokenTo, input).send({ from: account})\n        context.setContext({ transaction: tx })\n       }\n        \n    }\n    const Sell = async ()=>{\n        const contract = getMAIContract()\n        const addressFrom = mainPool.address\n        const tokenTo = MAI_ADDRESS\n        const input = (sellData.input).toFixed() \n     //console.log(addressFrom, tokenTo, input)\n     if(addressFrom === ETH_ADDRESS){\n        const tx = await contract.methods.swapTokenToToken(addressFrom,tokenTo, input).send({ from: account, value:input})\n        context.setContext({ transaction: tx })\n       }else{\n        const tx = await contract.methods.swapTokenToToken(addressFrom,tokenTo, input).send({ from: account})\n        context.setContext({ transaction: tx })\n       }\n    }\n\n  \n    const poolAttributes = {\n        field1: {\n            title: 'VOLUME',\n            data: `${formatUSD(convertFromWei(mainPool?.volume))}`\n        },\n        field2: {\n            title: 'TX COUNT',\n            data: mainPool?.txCount\n        },\n        field3: {\n            title: 'PRICE',\n            data: `$${convertFromWei((mainPool?.price))}`\n        },\n    }\n\n    return (\n        <div>\n            <BreadcrumbCombo title={'SWAP'} parent={'POOLS'} link={'/pools'} child={'SWAP'}></BreadcrumbCombo>\n            {context.walletData ? \n            <div style={{ marginTop: '-10px' }}>\n                {tokenAddress ? \n                <Center><PoolPane\n                    pool={getPoolData(tokenAddress, context.PoolsData)}\n                    price={convertFromWei(context.maiPrice)}\n                    symbol={mainPool?.symbol}\n                    balance={mainPool?.balance}\n                    data={poolAttributes} /></Center>\n                    : <div></div> }\n           </div> : <Alert type=\"error\" message=\"Please Connect Your Wallet\" banner />}\n\n            <HR></HR>\n            <br />\n            {context.walletData ? \n            <Row style={paneStyles}>\n                <Col xs={24} style={colStyles}>\n                    <Row >\n                        <Col xs={2}>\n                        </Col>\n                        <Col xs={9} style={{ marginRight: 30 }}>\n                        <Center><H2> Buy {mainPool?.symbol} </H2></Center>\n                            <InputPane\n                                //mainPool={mainPool}\n                                tokenList={tokenList}\n                                paneData={buyData}\n                                onInputChange={onBuyChange}\n                                changeToken={changeBuyToken}\n                                changeAmount={changeBuyAmount}\n                            />\n                            <Col xs= {24} style={{marginLeft:10}}>\n                            <Text >Output: {convertFromWei(buyData.output)} ({buyData.outputSymbol})</Text>\n                            <br />\n                            <Text>Slip: {((buyData.slip) * 100).toFixed(2)}%</Text>\n                            </Col>\n                            <br /><br />\n                            <Center><Button type={'primary'} onClick={Buy} >BUY {mainPool?.symbol}</Button></Center>\n                        </Col>\n                        <Col xs={9} style={{ marginLeft: 30 }}>\n                        <Center><H2> Sell {mainPool?.symbol} </H2></Center>\n                            <InputPaneStatic\n                                tokenSymbol={mainPool}\n                                paneData={sellData}\n                                onInputChange={onSellChange}\n                                changeAmount={changeSellAmount} />\n                                <Col xs= {24} style={{marginLeft:10}}>\n                            <Text>Output: {convertFromWei(sellData.output)} ({sellData.outputSymbol})</Text>\n                            <br />\n                            <Text>Slip: {((sellData.slip) * 100).toFixed(2)}%</Text>\n                            </Col>\n                            <br /><br />\n                            <Center><Button type={'primary'} onClick={Sell} danger>SELL {mainPool?.symbol}</Button></Center>\n                        </Col>\n\n                        <Col xs={2}>\n                        </Col>\n                    </Row>\n                </Col>\n            </Row>\n        : <div></div> }\n             </div>\n    )\n}\n\nexport default Swap","import React, { useState, useEffect, useContext } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Row, Col, Alert } from 'antd'\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Context } from '../../context'\nimport { BreadcrumbCombo, InputPaneStatic, CoinRow, InputCheck } from '../components/common'\nimport { Center, Button, LabelGroup } from '../components/elements'\nimport { paneStyles, rowStyles, colStyles } from '../components/styles'\n\nimport { getStakeUnits } from '../../math'\nimport { filterWalletNotPools, getTokenSymbol,getTokenSupply, getWalletTokenData, ETH_ADDRESS, MAI_ADDRESS, getMAIContract, getTokenContract } from '../../client/web3'\n\nimport { convertFromWei, convertToWei, } from '../../utils'\n\n\nconst CreatePool = (props) => {\n    const context = useContext(Context)\n    const [tokenList, setTokenList] = useState([])\n    const [checkFlag, setCheckFlag] = useState(false)\n    const [tokenData, setTokenData] = useState(null)\n    const [visible, setVisible] = useState(false);\n    const [connected, setConnected] = useState(false)\n    const [newPool, setNewPool] = useState({\n        'depth': 0,\n        'balance': 0,\n    })\n    const [tokenStakeData, setTokenStakeData] = useState({\n        address: '',\n        symbol: '',\n        balance: 0,\n        input: 0,\n    })\n    const [baseStakeData, setBaseStake2Data] = useState({\n        address: '',\n        symbol: '',\n        balance: 0,\n        input: 0,\n    })\n    const [selectAddress, setCheckToken] = useState({\n        address: ETH_ADDRESS\n    })\n    const [stakeUnits, setStakeUnits] = useState(0)\n    const [account, setAccount] = useState(null)\n\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [context.walletData])\n    const getData = () => {\n        if (context.walletData) {\n\n            const tokens = filterWalletNotPools(context.arrayPools, context.walletData)\n            setTokenList(tokens)\n            setNewPool(getPoolData(0, 0))\n            const baseData = getWalletTokenData(MAI_ADDRESS, context.walletData)\n            setBaseStake2Data(getStakeData(baseData.balance, MAI_ADDRESS))\n            setConnected(true)\n        } else {\n            setConnected(false)\n        }\n    }\n    const alert = () => {\n        setVisible(true)\n    }\n    const checkToken = () => {\n        const address = context.walletData?.address\n        setAccount(address)\n\n        setTokenData(getWalletTokenData(selectAddress.address, context.walletData))\n        const token = getWalletTokenData(selectAddress.address, context.walletData)\n        console.log(token.balance)\n        setTokenStakeData(getStakeData(token.balance, selectAddress.address))\n        setCheckFlag(true)\n\n    }\n    const onCheckChange = (input) => {\n        setCheckToken(getCheckData(input))\n\n    }\n\n    const getPoolData = (depth, balance) => {\n        const poolState = {\n            depth: depth,\n            balance: balance\n        }\n        return poolState\n    }\n    const getCheckData = (input) => {\n        const checkData = {\n            address: input,\n        }\n        return checkData\n    }\n    const onTokenChange = (e) => {\n        const input = e.target.value\n        setTokenStakeData(getStakeData(convertToWei(input), tokenStakeData.address))\n        const stake = {\n            token: convertToWei(input),\n            base: baseStakeData.input\n        }\n        setStakeUnits(getStakeUnits(stake, newPool))\n    }\n    // const changeTokenStake = (token) => {\n    //     const inputTokenData =  getWalletTokenData(token, context.walletData)\n    //     setTokenStakeData( getStakeData(inputTokenData.balance, token))\n    //     const stake = {\n    //         token: inputTokenData.balance,\n    //         base: baseStakeData.input\n    //     }\n    //     setStakeUnits(getStakeUnits(stake, newPool))\n    // }\n    const changeStakeTokenAmount = (amount) => {\n        const finalAmt = (amount * tokenStakeData?.balance) / 100\n        console.log(finalAmt)\n        setTokenStakeData(getStakeData(finalAmt, tokenStakeData.address))\n        const stake = {\n            token: finalAmt,\n            base: baseStakeData.input\n        }\n        setStakeUnits(getStakeUnits(stake, newPool))\n    }\n    // const changeBaseStake = (token) => {\n    //     console.log(\"changing sell tokens not enabled yet\")\n    // }\n    const onBaseChange = (e) => {\n        const input = e.target.value\n        setBaseStake2Data(getStakeData(convertToWei(input), MAI_ADDRESS))\n        const stake = {\n            token: tokenStakeData.input,\n            base: convertToWei(input)\n        }\n        setStakeUnits(getStakeUnits(stake, newPool))\n    }\n    const changeStakeBaseAmount = (amount) => {\n        const finalAmt = (amount * baseStakeData?.balance) / 100\n        console.log(finalAmt)\n        setBaseStake2Data(getStakeData(finalAmt, MAI_ADDRESS))\n        const stake = {\n            token: tokenStakeData.input,\n            base: finalAmt\n        }\n        setStakeUnits(getStakeUnits(stake, newPool))\n    }\n    const getStakeData = (input, inputAddress) => {\n        const balance = (getWalletTokenData(inputAddress, context.walletData)).balance\n        const symbol = (getTokenSymbol(inputAddress, context.walletData))\n        const stakeData = {\n            address: inputAddress,\n            symbol: symbol,\n            balance: balance,\n            input: input,\n        }\n        return stakeData\n    }\n\n    // const getShare = () => {\n    //     const share = (bn(stakeUnits).div(bn(mainPool.units))).toFixed(2)\n    //     return (share*100).toFixed(2)\n    // }\n\n    const getValueOfShare = () => {\n        return '$1234.54'\n    }\n    // (address asset, uint amountAsset, uint amountMAI) public payable returns (bool success){\n    const createPool = async () => {\n        const contract = getMAIContract()\n        const contractToken = getTokenContract(selectAddress.address)\n        const tokenAddress = selectAddress.address\n        const BaseAmount = baseStakeData.input\n        const TokenAmount = tokenStakeData.input\n        const TokenAprove = await getTokenSupply(selectAddress.address)\n        //console.log(tokenAddress,BaseAmount,TokenAmount )\n        await contractToken.methods.approve(MAI_ADDRESS, TokenAprove).send({ from: account })\n        const tx = await contract.methods.addExchange(tokenAddress, TokenAmount, BaseAmount).send({ from: account })\n        context.setContext({ transaction: tx })\n        props.history.push('/pools')\n    }\n\n    return (\n        <div>\n            <BreadcrumbCombo title={'CREATE POOL'} parent={'POOLS'} link={'/pools'} child={'CREATE'}></BreadcrumbCombo>\n            <br />\n            <Row style={rowStyles}>\n                <Col xs={12}>\n                    <InputCheck\n                        tokenList={tokenList}\n                        paneData={selectAddress}\n                        onInputChange={onCheckChange}\n                    />\n                </Col>\n                {!connected &&\n                    <Row>\n                        <Button icon={<QuestionCircleOutlined />}\n                            onClick={alert}\n                            type=\"outline\">CHECK</Button>\n                        {visible &&\n                            <Alert type=\"error\" message=\"Please Connect Your Wallet\" banner />\n                        }\n                    </Row>\n                }\n                {connected &&\n                    <Col xs={4}>\n                        <Button icon={<QuestionCircleOutlined />}\n                            onClick={checkToken}\n                            type=\"outline\">CHECK</Button>\n\n                    </Col>\n                }\n                {checkFlag &&\n                    <Col xs={8}>\n                        <CoinRow\n                            symbol={tokenData.symbol}\n                            name={tokenData.name}\n                            balance={tokenData.balance}\n                            size={40} />\n                    </Col>\n                }\n            </Row>\n            {checkFlag &&\n                <div>\n                    <Row style={paneStyles}>\n                        <Col xs={24} style={colStyles}>\n                            <Row >\n                                <Col xs={12}>\n                                    <InputPaneStatic\n\n                                        tokenSymbol={tokenStakeData}\n                                        paneData={tokenStakeData}\n                                        onInputChange={onTokenChange}\n\n                                        changeAmount={changeStakeTokenAmount}\n\n                                    />\n                                </Col>\n                                <Col xs={12}>\n                                    <InputPaneStatic\n                                        tokenSymbol={baseStakeData}\n                                        paneData={baseStakeData}\n                                        onInputChange={onBaseChange}\n                                        changeAmount={changeStakeBaseAmount} />\n                                </Col>\n\n                            </Row>\n                            <Row style={rowStyles}>\n                                <Col xs={8}>\n                                    <Center><LabelGroup size={18} title={`${convertFromWei(stakeUnits.toFixed(0))}`} label={'ESTIMATED UNITS'} /></Center>\n                                    \n                                </Col>\n                                <Col xs={8}>\n                                    <Center><LabelGroup size={18} title={`100%`} label={'SHARE'} /></Center>\n                                </Col>\n                                <Col xs={8}>\n                                    <Center><LabelGroup size={18} title={`${getValueOfShare()}`} label={'STAKED VALUE'} /></Center>\n                                </Col>\n                            </Row>\n                            <br></br>\n                            <Center><Button type={'primary'} onClick={createPool}>CREATE POOL</Button></Center>\n                        </Col>\n                    </Row>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default withRouter(CreatePool)","import React, { useState, useEffect, useContext } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Row, Col, Alert } from 'antd'\nimport { QuestionCircleOutlined } from '@ant-design/icons';\nimport { Context } from '../../context'\nimport { BreadcrumbCombo, InputPaneStatic, CoinRow, InputCheck } from '../components/common'\nimport { Center, Button, LabelGroup } from '../components/elements'\nimport { paneStyles, rowStyles, colStyles } from '../components/styles'\n\nimport { getStakeUnits } from '../../math'\nimport { filterWalletNotPools, getTokenSymbol, getTokenSupply, getWalletTokenData, ETH_ADDRESS, MAI_ADDRESS, getMAIContract, getTokenContract } from '../../client/web3'\n\nimport { convertFromWei, convertToWei, } from '../../utils'\n\n\nconst CreateAnchor = (props) => {\n    const context = useContext(Context)\n    const [tokenList, setTokenList] = useState([])\n    const [checkFlag, setCheckFlag] = useState(false)\n    const [tokenData, setTokenData] = useState(null)\n    const [visible, setVisible] = useState(false);\n    const [connected, setConnected] = useState(false)\n \n    const [tokenStakeData, setTokenStakeData] = useState({\n        address: '',\n        symbol: '',\n        balance: 0,\n        input: 0,\n    })\n    const [baseStakeData, setBaseStake2Data] = useState({\n        address: '',\n        symbol: '',\n        balance: 0,\n        input: 0,\n    })\n    const [selectAddress, setCheckToken] = useState({\n        address: ETH_ADDRESS\n    })\n\n    const [account, setAccount] = useState(null)\n\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [context.walletData])\n    const getData = () => {\n        if (context.walletData) {\n            const tokens = filterWalletNotPools(context.arrayPools, context.walletData)\n            setTokenList(tokens)\n            \n            const baseData = getWalletTokenData(MAI_ADDRESS, context.walletData)\n            setBaseStake2Data(getStakeData(baseData.balance, MAI_ADDRESS))\n            setConnected(true)\n        } else {\n            setConnected(false)\n        }\n    }\n    const alert = () => {\n        setVisible(true)\n    }\n    const checkToken = () => {\n        const address = context.walletData?.address\n        setAccount(address)\n        setTokenData(getWalletTokenData(selectAddress.address, context.walletData))\n        const token = getWalletTokenData(selectAddress.address, context.walletData)\n        console.log(token.balance)\n        setTokenStakeData(getStakeData(token.balance, selectAddress.address))\n        setCheckFlag(true)\n    }\n    const onCheckChange = (input) => {\n        setCheckToken(getCheckData(input))\n\n    }\n\n    const getPoolData = (depth, balance) => {\n        const poolState = {\n            depth: depth,\n            balance: balance\n        }\n        return poolState\n    }\n    const getCheckData = (input) => {\n        const checkData = {\n            address: input,\n        }\n        return checkData\n    }\n    const onTokenChange = (e) => {\n        const input = e.target.value\n        setTokenStakeData(getStakeData(convertToWei(input), tokenStakeData.address))\n        const stake = {\n            token: convertToWei(input),\n            base: baseStakeData.input\n        }\n\n    }\n    // const changeTokenStake = (token) => {\n    //     const inputTokenData =  getWalletTokenData(token, context.walletData)\n    //     setTokenStakeData( getStakeData(inputTokenData.balance, token))\n    //     const stake = {\n    //         token: inputTokenData.balance,\n    //         base: baseStakeData.input\n    //     }\n    //     setStakeUnits(getStakeUnits(stake, newPool))\n    // }\n    const changeStakeTokenAmount = (amount) => {\n        const finalAmt = (amount * tokenStakeData?.balance) / 100\n        console.log(finalAmt)\n        setTokenStakeData(getStakeData(finalAmt, tokenStakeData.address))\n        const stake = {\n            token: finalAmt,\n            base: baseStakeData.input\n        }\n        \n    }\n    // const changeBaseStake = (token) => {\n    //     console.log(\"changing sell tokens not enabled yet\")\n    // }\n    const onBaseChange = (e) => {\n        const input = e.target.value\n        setBaseStake2Data(getStakeData(convertToWei(input), MAI_ADDRESS))\n        const stake = {\n            token: tokenStakeData.input,\n            base: convertToWei(input)\n        }\n        \n    }\n    const changeStakeBaseAmount = (amount) => {\n        const finalAmt = (amount * baseStakeData?.balance) / 100\n        console.log(finalAmt)\n        setBaseStake2Data(getStakeData(finalAmt, MAI_ADDRESS))\n        const stake = {\n            token: tokenStakeData.input,\n            base: finalAmt\n        }\n        \n    }\n    const getStakeData = (input, inputAddress) => {\n        const balance = (getWalletTokenData(inputAddress, context.walletData)).balance\n        const symbol = (getTokenSymbol(inputAddress, context.walletData))\n        const stakeData = {\n            address: inputAddress,\n            symbol: symbol,\n            balance: balance,\n            input: input,\n        }\n        return stakeData\n    }\n\n    // const getShare = () => {\n    //     const share = (bn(stakeUnits).div(bn(mainPool.units))).toFixed(2)\n    //     return (share*100).toFixed(2)\n    // }\n\n    const getValueOfShare = () => {\n        return '$1234.54'\n    }\n    // (address asset, uint amountAsset, uint amountMAI) public payable returns (bool success){\n    const createAnchorPool = async () => {\n        const contract = getMAIContract()\n        const contractToken = getTokenContract(selectAddress.address)\n        const tokenAddress = selectAddress.address\n        const BaseAmount = baseStakeData.input\n        const TokenAmount = tokenStakeData.input\n        const TokenApprove = await getTokenSupply(selectAddress.address)\n        await contractToken.methods.approve(MAI_ADDRESS, TokenApprove).send({ from: account })\n        const tx = await contract.methods.addAnchor(tokenAddress, TokenAmount, BaseAmount).send({ from: account })\n        context.setContext({ transaction: tx })\n        props.history.push('/anchor')\n    }\n\n    return (\n        <div>\n            <BreadcrumbCombo title={'CREATE ANCHOR'} parent={'ANCHOR'} link={'/anchor'} child={'CREATE'}></BreadcrumbCombo>\n            <br />\n            <Row style={rowStyles}>\n                <Col xs={12}>\n                    <InputCheck\n                        tokenList={tokenList}\n                        paneData={selectAddress}\n                        onInputChange={onCheckChange}\n                    />\n                </Col>\n                {!connected &&\n                    <Row>\n                        <Button icon={<QuestionCircleOutlined />}\n                            onClick={alert}\n                            type=\"outline\">CHECK</Button>\n                        {visible &&\n                            <Alert type=\"error\" message=\"Please Connect Your Wallet\" banner />\n                        }\n                    </Row>\n                }\n                {connected &&\n                    <Col xs={4}>\n                        <Button icon={<QuestionCircleOutlined />}\n                            onClick={checkToken}\n                            type=\"outline\">CHECK</Button>\n\n                    </Col>\n                }\n                {checkFlag &&\n                    <Col xs={8}>\n                        <CoinRow\n                            symbol={tokenData.symbol}\n                            name={tokenData.name}\n                            balance={tokenData.balance}\n                            size={40} />\n                    </Col>\n                }\n            </Row>\n            {checkFlag &&\n                <div>\n                    <Row style={paneStyles}>\n                        <Col xs={24} style={colStyles}>\n                            <Row >\n                                <Col xs={12}>\n                                    <InputPaneStatic\n                                        tokenSymbol={tokenStakeData}\n                                        paneData={tokenStakeData}\n                                        onInputChange={onTokenChange}\n                                        changeAmount={changeStakeTokenAmount}\n                                    />\n                                </Col>\n                                <Col xs={12}>\n                                    <InputPaneStatic\n                                        tokenSymbol={baseStakeData}\n                                        paneData={baseStakeData}\n                                        onInputChange={onBaseChange}\n                                        changeAmount={changeStakeBaseAmount} />\n                                </Col>\n\n                            </Row>\n                            {/* <Row style={rowStyles}>\n                                <Col xs={8}>\n                                    <Center><LabelGroup size={18} title={`${convertFromWei(stakeUnits.toFixed(0))}`} label={'ESTIMATED UNITS'} /></Center>\n                                    \n                                </Col>\n                                <Col xs={8}>\n                                    <Center><LabelGroup size={18} title={`100%`} label={'SHARE'} /></Center>\n                                </Col>\n                                <Col xs={8}>\n                                    <Center><LabelGroup size={18} title={`${getValueOfShare()}`} label={'STAKED VALUE'} /></Center>\n                                </Col>\n                            </Row> */}\n                            <br></br>\n                            <Center><Button type={'primary'} onClick={createAnchorPool}>CREATE ANCHOR POOL</Button></Center>\n                        </Col>\n                    </Row>\n                </div>\n            }\n        </div>\n    )\n}\n\nexport default withRouter(CreateAnchor)","import React, { useEffect, useState, useContext } from 'react'\nimport { Context } from '../../context'\nimport { Button, Row, Col, Tabs, Input, Form, Alert } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { BreadcrumbCombo,  PercentButtonRow, InputPaneStatic, CDPPane,CLTButtonRow} from '../components/common'\nimport '../../App.css';\nimport { Center, LabelGroup,H2,Sublabel,Text } from '../components/elements';\nimport { paneStyles, colStyles, rowStyles } from '../components/styles'\nimport {  convertFromWei, convertToWei,  delay } from '../../utils'\nimport { getMAXMINT } from '../../math'\nimport { getPoolData, getMAIContract, ETH_ADDRESS, MAI_ADDRESS } from '../../client/web3'\n//import { symbol } from 'prop-types';\n\nconst { TabPane } = Tabs;\nconst ManageCDP = (props) => {\n    const context = useContext(Context)\n     const [retry, setRetry]= useState(0)\n    const [connected, setConnected] = useState(false)\n    useEffect(() => {\n        getData()\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [context.accountCDP, retry])\n\n    const getData = async () => {\n        if(context.accountCDP){\n            context.setContext({ mainPool: getPoolData(ETH_ADDRESS, context.PoolsData) })\n            setConnected(true) \n        }else{\n            await delay(2000)\n            setRetry(parseInt(retry) +1)\n            setConnected(false)\n        }\n        \n    }\n  \n    return (\n        <div>\n            <BreadcrumbCombo title={'Manage CDP'} parent={'CDPs'} link={'/cdps'} child={'Manage CDP'}></BreadcrumbCombo>\n            <br />\n            \n            <div style={{ marginTop: '-30px' }}>\n                {connected ? \n                <CDPDETAILS /> :  \n                <div> \n                <LoadingOutlined />\n                <Alert type=\"error\" message=\"Please Connect Your Wallet\" banner />\n                </div> }\n            </div>\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane tab=\"Add Collateral\" key=\"1\">\n                {connected ? <AddCollateralTab /> :  <LoadingOutlined />}\n                </TabPane>\n                <TabPane tab=\"Close Debt\" key=\"2\">\n                {connected ?  <CloseDebtTab/> :  <LoadingOutlined />}\n                </TabPane>\n                <TabPane tab=\"Remint MAI\" key=\"3\">\n                {connected ?  <RemintTab /> :  <LoadingOutlined />}\n                </TabPane>\n            </Tabs>\n\n        </div>\n    )\n}\n\nexport default ManageCDP\n\nexport const CDPDETAILS = () => {\n    const context = useContext(Context)\n    useEffect(() => {\n\n    }, [context.accountCDP])\n\n    return (<div>\n        <Center>\n            <Row>\n                <CDPPane\n                    name={\"Collateral\"}\n                    symbol={\"ETH\"}\n                    balance={context.accountCDP?.collateral}\n                />\n                <CDPPane\n                    name={\"Debt\"}\n                    symbol={\"MAI\"}\n                    balance={context.accountCDP?.debt}\n                />\n            </Row>\n        </Center>\n    </div>)\n\n}\nexport const AddCollateralTab = () => {\n    const context = useContext(Context)\n    const [account, setAccount] = useState(null)\n    const [update, setUpdate]= useState(false)\n    const [addCollateralData, setAddCollateralData] = useState({\n        address: context.ETHData?.address,\n        symbol: context.ETHData?.symbol,\n        balance: context.ETHData?.balance,\n        collateral: context.accountCDP?.collateral,\n        input: 0\n    })\n    const [mainPool, setMainPool] = useState({\n        symbol: '',\n        address: '',\n        depth: '',\n        balance: '',\n    })\n    useEffect(() => {\n        getData()\n    }, [context.accountCDP])\n\n \n\n    const getData = async () => {\n        const address = context.walletData?.address\n        setAddCollateralData(getCollateralData(context.ETHData?.balance, context.ETHData?.address))\n        setMainPool({\n            symbol: context.mainPool?.symbol,\n            address: context.mainPool?.address,\n            depth: context.mainPool?.depth,\n            balance: context.mainPool?.balance\n        })\n        setAccount(address)\n     \n    }\n\n    const getCollateralData = (input, inputAddress) => {\n        const balance = context.ETHData?.balance\n        const symbol = context.ETHData?.symbol\n        const collateral = parseInt(context.accountCDP?.collateral) + parseInt(input)\n        const CollateralData = {\n            address: inputAddress,\n            symbol: symbol,\n            balance: balance,\n            collateral: collateral,\n            input: input,\n        }\n        return CollateralData\n    }\n    const onAddCollateralChange = (e) => {\n        const input = e.target.value\n        setAddCollateralData(getCollateralData(convertToWei(input), context.ETHData?.address))\n    }\n    const addCollateral = async () => {\n        const contract = getMAIContract()\n        const amount = addCollateralData.input\n        const tx = await contract.methods.addCollateralToCDP().send({ from: account, to: MAI_ADDRESS, value: amount })\n        context.setContext({ transaction: tx })\n        setUpdate(true)\n    }\n    const changeAddCollateralAmount = (amount) => {\n        const finalAmt = (amount * addCollateralData?.balance) / 100\n        setAddCollateralData(getCollateralData(finalAmt, context.ETHData?.address))\n    }\n\n\n    return (<div>\n        <Row style={paneStyles}>\n            <Col xs={24} style={colStyles}>\n                <Row >\n                    <Col xs={8}></Col>\n                    <Col xs={8}>\n                    <Center><H2> Set Collateral Amount</H2></Center>\n                        <InputPaneStatic\n                            tokenSymbol={addCollateralData}\n                            paneData={addCollateralData}\n                            onInputChange={onAddCollateralChange}\n                            changeAmount={changeAddCollateralAmount} />\n                        <br />\n                    </Col>\n                    <Col xs={8}>\n                    </Col>\n                </Row>\n                <Row style={rowStyles}>\n                    <Col xs={6}></Col>\n                    <Col xs={6}>\n                        <Center><LabelGroup size={18} title={`${convertFromWei(addCollateralData.collateral)}`} label={'ESTIMATED TOTAL COLLATERAL'} /></Center>\n                    </Col>\n                    <Col xs={6}>\n                        <Center><LabelGroup size={18} title={`${convertFromWei(parseInt(getMAXMINT(addCollateralData.collateral, mainPool, 101)) - parseInt(context.accountCDP?.debt))}`} label={'ESTIMATED MAX MINTABLE'} /></Center>\n                    </Col>\n                    <Col xs={6}></Col>\n                </Row>\n                <br></br>\n                <Center><Button onClick={addCollateral} type={'primary'}>Add Collateral</Button></Center>\n\n            </Col>\n        </Row>\n    </div>)\n\n}\n\nexport const RemintTab = () => {\n    const context = useContext(Context)\n    const [account, setAccount] = useState(null)\n    const [setCR, setCollaterisation] = useState('150')\n    useEffect(() => {\n        getData()\n    }, [context.accountCDP])\n\n    const getData = async () => {\n        const address = context.walletData?.address\n        setAccount(address)\n\n    }\n    const onChange = async (amount) => {\n        setCollaterisation(amount)\n    }\n\n    const onRatioAmountChange = e => {\n        setCollaterisation(e.target.value)\n    }\n\n    const remintTOKEN = async () => {\n        const contract = getMAIContract()\n        const collateralisation = setCR\n        const tx = await contract.methods.remintMAIFromCDP(collateralisation).send({from: account, to: MAI_ADDRESS})\n        context.setContext({ transaction: tx })\n    }\n\n\n    return (<div>\n        <Row style={paneStyles}>\n            <Col xs={24} style={colStyles}>\n            <Center><H2>Set Collateralisation</H2></Center>\n                <Row style={rowStyles}>\n                    <Col xs={6}></Col>\n                    <Col xs={6}>\n                        <Center><LabelGroup size={18} title={`${convertFromWei(context.accountCDP?.collateral)}`} label={'COLLATERAL'} /></Center>\n                    </Col>\n                    <Col xs={6}>\n                        <Center><LabelGroup size={18} title={`${convertFromWei(parseInt(getMAXMINT(context.accountCDP?.collateral, context.mainPool, 102)) - parseInt(context.accountCDP?.debt))}`} label={'MAX MINTABLE'} /></Center>\n                    </Col>\n                    <Col xs={6}></Col>\n                </Row>\n                <br />\n                <Row>\n                    <Col xs={8}></Col>\n                    \n                    <Col xs={8}>\n                        <Form>\n                                <Input size={'medium'} allowClear onChange={onRatioAmountChange} placeholder={setCR} />\n                        </Form>\n                        <Sublabel>Default 150% </Sublabel>\n                        <CLTButtonRow changeAmount={onChange} />\n                    </Col>\n                    <Col xs={8}>\n                    </Col>\n                </Row>\n\n                <Row style={rowStyles}>\n                    \n                    <Col xs={24}>\n                        <Center><LabelGroup size={18} title={`${convertFromWei(getMAXMINT(context.accountCDP?.collateral, context.mainPool, setCR))}`} label={'ESTIMATED FINAL DEBT'} /></Center>\n                    </Col>\n                    \n                </Row>\n                <br></br>\n                <Center><Button onClick={remintTOKEN} type={'primary'}>MINT MAI </Button></Center>\n            </Col>\n        </Row>\n    </div>)\n\n}\n\nexport const CloseDebtTab = () => {\n    const context = useContext(Context)\n    const [account, setAccount] = useState(null)\n    //const [closeDebt, setCloseDebt] = useState(null)\n\n    const [closeDebtData, setCloseDebtData] = useState({\n        symbol: context.BASEData?.symbol,\n        balance: context.BASEData?.balance,\n        debt: context.accountCDP?.debt,\n        input: 0\n    })\n    useEffect(() => {\n        getData()\n    }, [context.accountCDP])\n\n\n    const getData = async () => {\n        const address = context.walletData?.address\n        setCloseDebtData(getDebtData(50))\n        setAccount(address)\n\n    }\n\n    const getDebtData = (input) => {\n        const balance = context.BASEData?.balance\n        const symbol = context.BASEData?.symbol\n        const debt = (input * context.accountCDP?.debt)/100\n        const DebtData = {\n            symbol: symbol,\n            balance: balance,\n            debt: debt,\n            input: input,\n        }\n        return DebtData\n    }\n    const onAddDebtChange = (e) => {\n        const input = e.target.value\n        setCloseDebtData(getDebtData(input))\n    }\n    const closeDebt = async () => {\n        const contract = getMAIContract()\n        const liquidation = (closeDebtData.input *100)\n        console.log(liquidation)\n        const tx = await contract.methods.closeCDP(liquidation).send({ from: account, to: MAI_ADDRESS })\n        context.setContext({ transaction: tx })\n    }\n    const changeCloseDebtAmount = (amount) => {\n        //const finalAmt = (amount * closeDebtData?.balance) / 100\n        console.log(amount)\n        setCloseDebtData(getDebtData(amount, context.BASEData?.address))\n    }\nconst precise = (x) => {\n    return Number.parseFloat(x).toPrecision(3);\n  }\n\n\n\n    return (<div>\n        <Row style={paneStyles}>\n            <Col xs={24} style={colStyles}>\n            <Center><H2> Set Closing Amount</H2></Center>\n            <Row style={rowStyles}>\n            \n                </Row>\n               \n                <Row >\n                <Col xs={8}></Col>\n                    <Col xs={8}>\n                     <Form>\n                        <Input size={'medium'} allowClear onChange={onAddDebtChange} placeholder={closeDebtData.input} />\n                        </Form>\n                        <Sublabel>Default 50% </Sublabel>\n                        <PercentButtonRow changeAmount={changeCloseDebtAmount} />\n                        <br />\n                    </Col>\n                    <Col xs={8}></Col>\n                </Row>\n                \n                <Row style={rowStyles}>\n\n                <Col xs={6}></Col>\n                 <Col xs={6}>\n                        <Center><LabelGroup size={18} title={`${precise(convertFromWei((context.accountCDP?.collateral)*closeDebtData.input)/100)}`} label={'ESTIMATED COLLATERAL RECIEVING'} /></Center>\n                    </Col>\n                    \n                    <Col xs={6}>\n                        <Center><LabelGroup size={18} title={`${precise(convertFromWei((context.accountCDP?.debt)*closeDebtData.input)/100)}`} label={'ESTIMATED DEBT SENDING'} /></Center>\n                    </Col>\n                <Col xs={6}></Col>\n                </Row>\n                <br></br>\n                <Center><Button onClick={closeDebt} type={'primary'}>Close Debt</Button></Center>\n\n            </Col>\n        </Row>\n    </div>)\n\n}\n","import React, { useEffect, useState, useContext } from 'react'\nimport { Context } from '../../context'\nimport { Button, Row, Col, Form, Input } from 'antd';\nimport { withRouter } from 'react-router-dom'\nimport { BreadcrumbCombo, InputPaneStatic, PoolPane, CLTButtonRow } from '../components/common'\nimport '../../App.css';\nimport { Center, HR, Text, Label,H2,Sublabel } from '../components/elements';\nimport { paneStyles, colStyles } from '../components/styles'\nimport {formatBN, convertFromWei, convertToWei, formatUSD} from '../../utils'\nimport { getSwapOutput, getSwapSlip, getDoubleSwapOutput, getDoubleSwapSlip } from '../../math'\nimport { getAccountCDP,getMAIContract, getWalletTokenData, getWeb3, ETH_ADDRESS, MAI_ADDRESS  } from '../../client/web3'\nimport { PlusCircleOutlined, AlertFilled } from '@ant-design/icons';\n\nconst OpenCDP = (props) => {\nconst context = useContext(Context)\nconst [account, setAccount] = useState(null)\n\nconst [collateralData, setCollateralData] = useState({\n    symbol:'ETH',\n    balance: '',\n    input: 1,\n})\n\nconst [setCR, setCollaterisation] = useState('150')\nuseEffect(() => {\n    getData()\n}, [context.walletData, context.ETHData])\n\nconst getData = () =>{\n    const address = context.walletData?.address\n        setCollateralData(getCollateralData(convertToWei(0.1)))\n        setAccount(address)\n}\nconst getCollateralData = (input) => {\n    const balance = context.ETHData?.balance \n    const symbol = context.ETHData?.symbol\n    const CollateralData = {\n        symbol: symbol,\n        balance: balance,\n        input: input,\n    }\n    return CollateralData\n}\n\n const onEthAmountChange = (e) => {\n    const input = e.target.value\n    setCollateralData(getCollateralData(convertToWei(input)))\n}\n\n const changeAddCollateralAmount = (amount) => {\n    const input = (amount * collateralData?.balance) / 100\n    setCollateralData(getCollateralData(input))\n}\n\n const onRatioAmountChange = e => {\n     setCollaterisation(e.target.value)\n }\n\n const onChange =  (amount) => {\n     setCollaterisation(amount)\n }\n const openCDP = async () => {\n       const contract = getMAIContract()\n       const amount = collateralData.input\n       const cltRatio = setCR\n       //console.log(cltRatio,amount )\n       const tx = await contract.methods.openCDP(cltRatio).send({ from: account, value: amount })\n      context.setContext({transaction : tx})\n      props.history.push('/CDPs')\n }\n\n    return ( \n        <div>\n            \n            <BreadcrumbCombo title={'Open CDP'} parent={'CDPs'} link={'/cdps'} child={'Open CDP'}></BreadcrumbCombo>\n            <br />\n            <div >\n            <Row style={paneStyles}>\n                        <Col xs={24} style={colStyles}>\n                            <Row>\n                                <Col xs={2}>\n                                </Col>\n                                <Col xs={8}>\n                                <Center><H2>1. Set Collateral Amount</H2></Center>\n                                <InputPaneStatic\n                            tokenSymbol={collateralData}\n                            paneData={collateralData}\n                            onInputChange={onEthAmountChange}\n                            changeAmount={changeAddCollateralAmount} />\n                            </Col>\n                            <Col xs={4}>\n                                </Col>\n                            <Col xs={8}>\n                            <Center><H2>2. Set Collateralisation</H2></Center>\n                            <Form>\n                                <Input size={'medium'} allowClear onChange={onRatioAmountChange} placeholder={setCR} />\n                        </Form>\n                        \n                        <Sublabel>Default 150% </Sublabel>\n                       \n                    <CLTButtonRow changeAmount={onChange}/>\n                    \n                    </Col>\n                                <Col xs={2}>\n                                </Col>\n                            </Row>\n                            {/* <Row style={rowStyles}>\n                                <Col xs={8}>\n                                \n                                </Col>\n                                <Col xs={8}>\n                                <Center><LabelGroup size={18} title={`${convertFromWei()}`} label={'Estimated FEE'} /></Center>\n                                </Col>\n                                <Col xs={8}>\n                                \n                                </Col>\n                            </Row> */}\n                            <br></br>\n                            <Center><Button onClick={openCDP} type =\"primary\" icon={<PlusCircleOutlined/>}>Open CDP</Button></Center>\n                        </Col>\n                    </Row>\n\n\n            \n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(OpenCDP)\n\n\n","import React, { useEffect, useState, useContext } from 'react'\nimport { Context } from '../../context'\nimport { Button, Row, Col, Tabs, Input, Form, Alert } from 'antd';\nimport {withRouter} from 'react-router-dom';\n//import { LoadingOutlined } from '@ant-design/icons';\nimport { BreadcrumbCombo, LiquidButtonRow} from '../components/common'\nimport '../../App.css';\nimport { Center, LabelGroup } from '../components/elements';\nimport { paneStyles, colStyles, rowStyles } from '../components/styles'\nimport {  convertFromWei, convertToWei,  delay } from '../../utils'\nimport { getLiquidationFee } from '../../math'\nimport {  getMAIContract,getCDPData } from '../../client/web3'\nimport { LeftCircleFilled } from '@ant-design/icons';\n\n//import { symbol } from 'prop-types';\n\n\nconst Liquidate = (props) => {\n    const context = useContext(Context)\n      const [retry, setRetry]= useState(0)\n    const [account, setAccount] = useState(null)\n    const [cdp, setCDP] = useState(null)\n    const [liquidationData, setSetLiquidationData] = useState({\n        cdp: '',\n        input: 0\n    })\n    const[cdpData, setCDPData] = useState({\n        debt:'',\n        collateral:''\n    })\n    const [fee, setFee]= useState(0)\n    useEffect(() => {\n        getData()\n       \n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [context.walletData, retry])\n\n    const getData = async () => {\n        const address = context.walletData?.address\n        setAccount(address)\n            const search = props.location.search; \n            const params = new URLSearchParams(search);\n            const CDP = params.get('CDP'); \n             setCDP(CDP)\n             setSetLiquidationData(getLiquidationData(33))\n             if(context.AllCDPData){\n             let cdpData = getCDPData(CDP,context.AllCDPData)\n             context.setContext({cdpData:cdpData})\n                 setCDPData(getSelectedCDPData(cdpData))\n             }else{\n                 await delay(1000)\n                 setRetry(parseInt(retry)+1)\n             }\n            \n    }\n    const getSelectedCDPData = (cdp ) => {\n        const CDPData = {\n            debt:cdp.debt,\n            collateral:cdp.collateral\n        }\n        return CDPData\n    }\n\n    const getLiquidationData = (input) => {\n        const liquidationData = {\n            cdp: cdp,\n            input: input,\n        }\n        return liquidationData\n    }\n    const liquidationChange = (e) => {\n        const input = e.target.value\n        setSetLiquidationData(getLiquidationData(input))\n        setFee(getLiquidationFee(cdpData.debt, cdpData.collateral, context.mainPool,(input *100)))\n    }\n    const changeLiquidationAmount = (amount) => {\n        setSetLiquidationData(getLiquidationData(amount, cdp))\n      // console.log(cdpData.debt, cdpData.collateral)\n        setFee(getLiquidationFee(cdpData.debt, cdpData.collateral, context.mainPool,(amount *100)))\n    }\n\n    const LiquidateCDP = async () => {\n        const contract = getMAIContract()\n        const liquidationAmount = liquidationData.input * 100\n        const unSafeCDP = liquidationData.cdp\n        //console.log(unSafeCDP,liquidationAmount, account)\n        const tx = await contract.methods.liquidateCDP(unSafeCDP, liquidationAmount).send({from: account})\n        context.setContext({ transaction: tx })\n        props.history.push('/cdps')\n    \n    }\n \n    return (\n        <div>\n            <BreadcrumbCombo title={'Liquidate CDP'} parent={'CDPs'} link={'/cdps'} child={'Liquidate CDP'}></BreadcrumbCombo>\n            <br />\n            {context.walletData ? \n            <Row style={paneStyles}>\n                        <Col xs={24} style={colStyles}>\n                            <Row>\n                                <Col xs={6}>\n                                </Col>\n                                <Col xs={12}>\n                                <Form>\n                            <Form.Item label=\"Liquidation %\" >\n                                <Input size={'medium'} allowClear onChange={liquidationChange} placeholder={liquidationData.input} />\n                            </Form.Item>\n                            <Center> <LiquidButtonRow changeAmount={changeLiquidationAmount} /></Center>\n                        </Form>\n                                </Col>\n                                <Col xs={6}>\n                                </Col>\n                            </Row>\n                            <Row style={rowStyles}>\n                                <Col xs={8}>\n                                \n                                </Col>\n                                <Col xs={8}>\n                                <Center><LabelGroup size={18} title={`${convertFromWei(fee)}`} label={'Estimated FEE'} /></Center>\n                                </Col>\n                                <Col xs={8}>\n                                \n                                </Col>\n                            </Row>\n                            <br></br>\n                            <Center><Button onClick={LiquidateCDP} type={'primary'}>LIQUIDATE CDP</Button></Center>\n                        </Col>\n                    </Row> : <Alert type=\"error\" message=\"Please Connect Your Wallet\" banner />}\n            \n        </div>\n    )\n}\n\nexport default withRouter(Liquidate)","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Layout } from 'antd';\nimport './App.css';\nimport 'antd/dist/antd.css'\nimport { Colour } from './ui/components/elements'\n\nimport Headbar from './ui/layout/Headbar'\n// import Footer from './ui/layout/Footer'\n\nimport Overview from './ui/pages/Overview'\nimport Pools from './ui/pages/Pools'\n import CDPs from './ui/pages/CDPs'\nimport PriceAnchor from './ui/pages/PriceAnchor'\n//import About from './ui/pages/About'\n\nimport Stake from './ui/pages/Stake'\nimport Swap from './ui/pages/Swap'\nimport CreatePool from './ui/pages/CreatePool'\nimport AnchorPool from './ui/pages/createAnchor'\nimport ManageCDP from './ui/pages/manageCDP'\nimport OpenCDP from './ui/pages/openCDP'\nimport Liquidate from './ui/pages/liquidate'\nimport { ContextProvider } from './context'\n\nconst { Content } = Layout;\n\nconst contentStyles = {\n\tbackground: Colour().white,\n\tcolor: '#000',\n\t// paddingLeft: 30,\n\t// paddingTop: 20,\n\t// paddingRight: 30,\n\t// paddingBottom: 50,\n\tpadding:20,\n\t// margin:40\n\t// minHeight:'calc(100vh - 70px)'\n}\n\nconst App = () => {\n\treturn (\n\t\t<Router>\n\t\t\t<div>\n\t\t\t\t<ContextProvider>\n\t\t\t\t\t<Layout style={{ height: \"100vh\", background:Colour().offwhite }}>\n\t\t\t\t\t\t<Headbar />\n\t\t\t\t\t\t<Content style={contentStyles}>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route path=\"/\" exact component={Overview} />\n\t\t\t\t\t\t\t\t<Route path=\"/overview\" exact component={Overview} />\n\t\t\t\t\t\t\t\t<Route path=\"/pools\" exact component={Pools} />\n\t\t\t\t\t\t\t\t<Route path=\"/CDPs\" exact component={CDPs} />\n\t\t\t\t\t\t\t\t<Route path=\"/anchor\" exact component={PriceAnchor} />\n\t\t\t\t\t\t\t\t<Route path=\"/anchor/create\" exact component={AnchorPool} />\n\t\t\t\t\t\t\t\t{/* <Route path=\"/about\" exact component={About} /> */}\n\t\t\t\t\t\t\t\t<Route path=\"/pool/stake\" exact component={Stake} />\n\t\t\t\t\t\t\t\t<Route path=\"/pool/swap\" exact component={Swap} />\n\t\t\t\t\t\t\t\t<Route path=\"/cdp/manageCDP\" exact component={ManageCDP}/>\n\t\t\t\t\t\t\t\t<Route path=\"/cdp/openCDP\" exact component={OpenCDP}/>\n\t\t\t\t\t\t\t\t<Route path=\"/cdp/Liquidate\" exact component={Liquidate}/>\n\t\t\t\t\t\t\t\t<Route path=\"/pool/create\" exact component={CreatePool} />\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Content>\n\t\t\t\t\t\t{/* <Footer style={{height:50}}/> */}\n\t\t\t\t\t</Layout>\n\t\t\t\t</ContextProvider>\n\t\t\t</div>\n\t\t</Router>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}